{
    "step_context": {
        "Execution": {
            "Id": "arn:aws:states:us-east-1:121169888995:execution:bandit-handle-enrichment-process:resource_added-8b2246b2-19ba-4645-aed3-92fdf88483a2-1678818248.155036",
            "Input": {
                "jit_event": {
                    "tenant_id": "46db21b6-fb2a-4c5d-9148-37d2248a7c20",
                    "jit_event_name": "resource_added",
                    "jit_event_id": "8b2246b2-19ba-4645-aed3-92fdf88483a2",
                    "asset_id": null,
                    "workflows": null,
                    "created_asset_ids": [
                        "57b6f168-8f2a-4b99-848f-f9c439ddac44"
                    ]
                },
                "trigger_filter_attributes": {
                    "plan_slugs": [],
                    "plan_item_slugs": [],
                    "workflow_slugs": [],
                    "job_names": [],
                    "asset_ids": [
                        "57b6f168-8f2a-4b99-848f-f9c439ddac44"
                    ],
                    "asset_envs": [],
                    "triggers": [
                        "resource_added"
                    ],
                    "create_trigger_event_from_jit_event": false
                },
                "asset": {
                    "aws_account_id": null,
                    "aws_stack_arn": null,
                    "aws_jit_role_name": null,
                    "aws_regions_to_scan": null,
                    "aws_jit_role_external_id": null,
                    "target_url": null,
                    "exclude_paths": null,
                    "authentication_mode": null,
                    "auth_header_name": null,
                    "auth_header_value": null,
                    "login_page_url": null,
                    "username": null,
                    "username_css_selector": null,
                    "password": null,
                    "password_css_selector": null,
                    "api_domain": null,
                    "external_id": "614020004",
                    "asset_id": "57b6f168-8f2a-4b99-848f-f9c439ddac44",
                    "tenant_id": "46db21b6-fb2a-4c5d-9148-37d2248a7c20",
                    "asset_type": "repo",
                    "vendor": "github",
                    "owner": "shlomi-test-org",
                    "asset_name": "moshiko",
                    "risk_status": null,
                    "risk_score": 0,
                    "is_active": true,
                    "is_covered": true,
                    "created_at": "2023-03-14T18:23:53.924735",
                    "modified_at": "2023-03-14T18:23:53.924735",
                    "environment": null,
                    "is_branch_protected_by_jit": false,
                    "status": null,
                    "status_details": null
                },
                "installations": [
                    {
                        "tenant_id": "46db21b6-fb2a-4c5d-9148-37d2248a7c20",
                        "app_id": "161076",
                        "owner": "shlomi-test-org",
                        "installation_id": "33985869",
                        "is_active": true,
                        "creator": "shlomi-test-org",
                        "vendor": "github",
                        "name": "shlomi-test-org",
                        "created_at": "2023-02-08T12:34:37.864980",
                        "modified_at": "2023-02-08T12:34:37.864980",
                        "status": "connected",
                        "status_details": null,
                        "installation_type": null,
                        "vendor_response": {
                            "canPreviewItem": true,
                            "repository_selection": "selected"
                        },
                        "external_id": null,
                        "aws_regions_to_monitor": null,
                        "centralized_repo_asset_id": "1a19b50a-20ef-4e33-afa1-8d9ac96ca36e",
                        "centralized_repo_asset": {
                            "aws_account_id": null,
                            "aws_stack_arn": null,
                            "aws_jit_role_name": null,
                            "aws_regions_to_scan": null,
                            "target_url": null,
                            "exclude_paths": null,
                            "authentication_mode": null,
                            "auth_header_name": null,
                            "auth_header_value": null,
                            "login_page_url": null,
                            "username": null,
                            "username_css_selector": null,
                            "password": null,
                            "password_css_selector": null,
                            "api_domain": null,
                            "external_id": "568439579",
                            "asset_id": "1a19b50a-20ef-4e33-afa1-8d9ac96ca36e",
                            "tenant_id": "46db21b6-fb2a-4c5d-9148-37d2248a7c20",
                            "asset_type": "repo",
                            "vendor": "github",
                            "owner": "shlomi-test-org",
                            "asset_name": ".jit",
                            "risk_status": null,
                            "risk_score": 0,
                            "is_active": true,
                            "is_covered": true,
                            "created_at": "2022-11-20T14:41:49.229143",
                            "modified_at": "2023-02-08T12:34:42.325014",
                            "environment": null,
                            "is_branch_protected_by_jit": false,
                            "status": null,
                            "status_details": null
                        }
                    },
                    {
                        "tenant_id": "46db21b6-fb2a-4c5d-9148-37d2248a7c20",
                        "app_id": "jit-aws",
                        "owner": "748560276420",
                        "installation_id": "748560276420",
                        "is_active": true,
                        "creator": "748560276420",
                        "vendor": "aws",
                        "name": "748560276420",
                        "created_at": "2023-02-21T15:42:00.133464",
                        "modified_at": "2023-02-21T15:42:00.133464",
                        "status": "connected",
                        "status_details": null,
                        "installation_type": "aws_account",
                        "vendor_response": null,
                        "external_id": "rmcCp1TbXILI2N2VH7E2G3DSo73iqD0DEFMAL9zw53c",
                        "aws_regions_to_monitor": [
                            "us-east-1"
                        ],
                        "centralized_repo_asset_id": null,
                        "centralized_repo_asset": null
                    }
                ],
                "filtered_jobs": [
                    {
                        "plan_item_slug": "item-branch-protection-scm",
                        "workflow_slug": "workflow-branch-protection-github-checker",
                        "workflow_name": "Branch Protection Checker on Github Workflow",
                        "job_name": "branch-protection-github-checker",
                        "workflow_template": {
                            "slug": "workflow-branch-protection-github-checker",
                            "name": "Branch Protection Checker on Github Workflow",
                            "type": "workflow",
                            "default": true,
                            "content": "jobs:\n  branch-protection-github-checker:\n    asset_type: repo\n    default: true\n    runner: jit\n    steps:\n    - name: Run Branch Protection checker\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-github-branch-protection-control\n        security_tool: Branch Protection Checker\n      uses: ghcr.io/jitsecurity-controls/control-branch-protection-github-alpine:latest\nname: Branch Protection Checker on Github Workflow\ntrigger:\n  true:\n  - item_activated\n  - resource_added\n  - schedule('daily')\n",
                            "depends_on": [],
                            "parsed_content": {
                                "name": "Branch Protection Checker on Github Workflow",
                                "jobs": {
                                    "branch-protection-github-checker": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "jit",
                                        "steps": [
                                            {
                                                "name": "Run Branch Protection checker",
                                                "uses": "ghcr.io/jitsecurity-controls/control-branch-protection-github-alpine:latest",
                                                "tags": {
                                                    "security_tool": "Branch Protection Checker",
                                                    "links": {
                                                        "github": "https://github.com/jitsecurity-controls/jit-github-branch-protection-control"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                "trigger": {
                                    "true": [
                                        "item_activated",
                                        "resource_added",
                                        "schedule('daily')"
                                    ]
                                }
                            },
                            "params": null,
                            "plan_item_template_slug": null,
                            "asset_types": [
                                "repo"
                            ]
                        },
                        "raw_job_template": {
                            "asset_type": "repo",
                            "default": true,
                            "runner": "jit",
                            "steps": [
                                {
                                    "name": "Run Branch Protection checker",
                                    "uses": "ghcr.io/jitsecurity-controls/control-branch-protection-github-alpine:latest",
                                    "tags": {
                                        "security_tool": "Branch Protection Checker",
                                        "links": {
                                            "github": "https://github.com/jitsecurity-controls/jit-github-branch-protection-control"
                                        }
                                    }
                                }
                            ]
                        },
                        "depends_on_slugs": []
                    },
                    {
                        "plan_item_slug": "item-code-vulnerability",
                        "workflow_slug": "workflow-sast",
                        "workflow_name": "SAST Workflow",
                        "job_name": "static-code-analysis-go",
                        "workflow_template": {
                            "slug": "workflow-sast",
                            "name": "SAST Workflow",
                            "type": "workflow",
                            "default": true,
                            "content": "jobs:\n  static-code-analysis-go:\n    asset_type: repo\n    default: true\n    if:\n      languages:\n      - go\n    runner: github_actions\n    steps:\n    - name: Run Go\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-golang-code-scanning-control\n          security_tool: https://github.com/securego/gosec\n        security_tool: Gosec\n      uses: ghcr.io/jitsecurity-controls/control-gosec-alpine:main\n      with:\n        args: -fmt=json -severity=high \\${WORK_DIR:-.}/...\n    tags:\n      languages:\n      - go\n  static-code-analysis-java:\n    asset_type: repo\n    if:\n      languages:\n      - java\n    runner: github_actions\n    steps:\n    - name: Run semgrep java\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control\n          security_tool: https://github.com/returntocorp/semgrep\n        security_tool: Semgrep\n      uses: ghcr.io/jitsecurity-controls/control-semgrep-alpine:main\n      with:\n        args: --json --config=/semgrep-java-config.yml --metrics=off --severity=ERROR\n          \\${WORK_DIR:-.}\n    tags:\n      languages:\n      - java\n  static-code-analysis-js:\n    asset_type: repo\n    default: true\n    if:\n      languages:\n      - javascript\n      - typescript\n    runner: github_actions\n    steps:\n    - name: Run semgrep javascript and typescript\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control\n          security_tool: https://github.com/returntocorp/semgrep\n        security_tool: Semgrep\n      uses: ghcr.io/jitsecurity-controls/control-semgrep-alpine:main\n      with:\n        args: --json --config=/semgrep-ts-config.yml --metrics=off --severity=ERROR\n          \\${WORK_DIR:-.}\n    tags:\n      languages:\n      - javascript\n      - typescript\n      - JS\n      - TS\n  static-code-analysis-python:\n    asset_type: repo\n    default: true\n    if:\n      languages:\n      - python\n    runner: github_actions\n    steps:\n    - name: Run Bandit\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-python-code-scanning-control\n          security_tool: https://github.com/PyCQA/bandit\n        security_tool: Bandit\n      uses: ghcr.io/jitsecurity-controls/control-bandit-slim:main\n      with:\n        args: -r \\${WORK_DIR:-.} -f json -q -lll -iii\n    tags:\n      languages:\n      - python\n  static-code-analysis-scala:\n    asset_type: repo\n    if:\n      languages:\n      - scala\n    runner: github_actions\n    steps:\n    - name: Run semgrep scala\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control\n          security_tool: https://github.com/returntocorp/semgrep\n        security_tool: Semgrep\n      uses: ghcr.io/jitsecurity-controls/control-semgrep-alpine:main\n      with:\n        args: --json --config=/semgrep-scala-config.yml --metrics=off --severity=ERROR\n          \\${WORK_DIR:-.}\n    tags:\n      languages:\n      - scala\nname: SAST Workflow\ntrigger:\n  true:\n  - item_activated\n  - resource_added\n  - pull_request_created\n  - pull_request_updated\n  - merge_default_branch\n  depends_on:\n  - workflow-enrichment-code\n",
                            "depends_on": [
                                "workflow-enrichment-code"
                            ],
                            "parsed_content": {
                                "name": "SAST Workflow",
                                "jobs": {
                                    "static-code-analysis-scala": {
                                        "asset_type": "repo",
                                        "runner": "github_actions",
                                        "if": {
                                            "languages": [
                                                "scala"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run semgrep scala",
                                                "with": {
                                                    "args": "--json --config=/semgrep-scala-config.yml --metrics=off --severity=ERROR \\${WORK_DIR:-.}"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-semgrep-alpine:main",
                                                "tags": {
                                                    "security_tool": "Semgrep",
                                                    "links": {
                                                        "security_tool": "https://github.com/returntocorp/semgrep",
                                                        "github": "https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "scala"
                                            ]
                                        }
                                    },
                                    "static-code-analysis-go": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "languages": [
                                                "go"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run Go",
                                                "with": {
                                                    "args": "-fmt=json -severity=high \\${WORK_DIR:-.}/..."
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-gosec-alpine:main",
                                                "tags": {
                                                    "security_tool": "Gosec",
                                                    "links": {
                                                        "security_tool": "https://github.com/securego/gosec",
                                                        "github": "https://github.com/jitsecurity-controls/jit-golang-code-scanning-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "go"
                                            ]
                                        }
                                    },
                                    "static-code-analysis-python": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "languages": [
                                                "python"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run Bandit",
                                                "with": {
                                                    "args": "-r \\${WORK_DIR:-.} -f json -q -lll -iii"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-bandit-slim:main",
                                                "tags": {
                                                    "security_tool": "Bandit",
                                                    "links": {
                                                        "security_tool": "https://github.com/PyCQA/bandit",
                                                        "github": "https://github.com/jitsecurity-controls/jit-python-code-scanning-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "python"
                                            ]
                                        }
                                    },
                                    "static-code-analysis-java": {
                                        "asset_type": "repo",
                                        "runner": "github_actions",
                                        "if": {
                                            "languages": [
                                                "java"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run semgrep java",
                                                "with": {
                                                    "args": "--json --config=/semgrep-java-config.yml --metrics=off --severity=ERROR \\${WORK_DIR:-.}"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-semgrep-alpine:main",
                                                "tags": {
                                                    "security_tool": "Semgrep",
                                                    "links": {
                                                        "security_tool": "https://github.com/returntocorp/semgrep",
                                                        "github": "https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "java"
                                            ]
                                        }
                                    },
                                    "static-code-analysis-js": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "languages": [
                                                "javascript",
                                                "typescript"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run semgrep javascript and typescript",
                                                "with": {
                                                    "args": "--json --config=/semgrep-ts-config.yml --metrics=off --severity=ERROR \\${WORK_DIR:-.}"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-semgrep-alpine:main",
                                                "tags": {
                                                    "security_tool": "Semgrep",
                                                    "links": {
                                                        "security_tool": "https://github.com/returntocorp/semgrep",
                                                        "github": "https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "javascript",
                                                "typescript",
                                                "JS",
                                                "TS"
                                            ]
                                        }
                                    }
                                },
                                "trigger": {
                                    "true": [
                                        "item_activated",
                                        "resource_added",
                                        "pull_request_created",
                                        "pull_request_updated",
                                        "merge_default_branch"
                                    ],
                                    "depends_on": [
                                        "workflow-enrichment-code"
                                    ]
                                }
                            },
                            "params": null,
                            "plan_item_template_slug": null,
                            "asset_types": [
                                "repo",
                                "repo",
                                "repo",
                                "repo",
                                "repo",
                                "repo"
                            ]
                        },
                        "raw_job_template": {
                            "asset_type": "repo",
                            "default": true,
                            "runner": "github_actions",
                            "if": {
                                "languages": [
                                    "go"
                                ]
                            },
                            "steps": [
                                {
                                    "name": "Run Go",
                                    "with": {
                                        "args": "-fmt=json -severity=high \\${WORK_DIR:-.}/..."
                                    },
                                    "uses": "ghcr.io/jitsecurity-controls/control-gosec-alpine:main",
                                    "tags": {
                                        "security_tool": "Gosec",
                                        "links": {
                                            "security_tool": "https://github.com/securego/gosec",
                                            "github": "https://github.com/jitsecurity-controls/jit-golang-code-scanning-control"
                                        }
                                    }
                                }
                            ],
                            "tags": {
                                "languages": [
                                    "go"
                                ]
                            }
                        },
                        "depends_on_slugs": [
                            "workflow-enrichment-code"
                        ]
                    },
                    {
                        "plan_item_slug": "item-code-vulnerability",
                        "workflow_slug": "workflow-sast",
                        "workflow_name": "SAST Workflow",
                        "job_name": "static-code-analysis-js",
                        "workflow_template": {
                            "slug": "workflow-sast",
                            "name": "SAST Workflow",
                            "type": "workflow",
                            "default": true,
                            "content": "jobs:\n  static-code-analysis-go:\n    asset_type: repo\n    default: true\n    if:\n      languages:\n      - go\n    runner: github_actions\n    steps:\n    - name: Run Go\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-golang-code-scanning-control\n          security_tool: https://github.com/securego/gosec\n        security_tool: Gosec\n      uses: ghcr.io/jitsecurity-controls/control-gosec-alpine:main\n      with:\n        args: -fmt=json -severity=high \\${WORK_DIR:-.}/...\n    tags:\n      languages:\n      - go\n  static-code-analysis-java:\n    asset_type: repo\n    if:\n      languages:\n      - java\n    runner: github_actions\n    steps:\n    - name: Run semgrep java\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control\n          security_tool: https://github.com/returntocorp/semgrep\n        security_tool: Semgrep\n      uses: ghcr.io/jitsecurity-controls/control-semgrep-alpine:main\n      with:\n        args: --json --config=/semgrep-java-config.yml --metrics=off --severity=ERROR\n          \\${WORK_DIR:-.}\n    tags:\n      languages:\n      - java\n  static-code-analysis-js:\n    asset_type: repo\n    default: true\n    if:\n      languages:\n      - javascript\n      - typescript\n    runner: github_actions\n    steps:\n    - name: Run semgrep javascript and typescript\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control\n          security_tool: https://github.com/returntocorp/semgrep\n        security_tool: Semgrep\n      uses: ghcr.io/jitsecurity-controls/control-semgrep-alpine:main\n      with:\n        args: --json --config=/semgrep-ts-config.yml --metrics=off --severity=ERROR\n          \\${WORK_DIR:-.}\n    tags:\n      languages:\n      - javascript\n      - typescript\n      - JS\n      - TS\n  static-code-analysis-python:\n    asset_type: repo\n    default: true\n    if:\n      languages:\n      - python\n    runner: github_actions\n    steps:\n    - name: Run Bandit\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-python-code-scanning-control\n          security_tool: https://github.com/PyCQA/bandit\n        security_tool: Bandit\n      uses: ghcr.io/jitsecurity-controls/control-bandit-slim:main\n      with:\n        args: -r \\${WORK_DIR:-.} -f json -q -lll -iii\n    tags:\n      languages:\n      - python\n  static-code-analysis-scala:\n    asset_type: repo\n    if:\n      languages:\n      - scala\n    runner: github_actions\n    steps:\n    - name: Run semgrep scala\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control\n          security_tool: https://github.com/returntocorp/semgrep\n        security_tool: Semgrep\n      uses: ghcr.io/jitsecurity-controls/control-semgrep-alpine:main\n      with:\n        args: --json --config=/semgrep-scala-config.yml --metrics=off --severity=ERROR\n          \\${WORK_DIR:-.}\n    tags:\n      languages:\n      - scala\nname: SAST Workflow\ntrigger:\n  true:\n  - item_activated\n  - resource_added\n  - pull_request_created\n  - pull_request_updated\n  - merge_default_branch\n  depends_on:\n  - workflow-enrichment-code\n",
                            "depends_on": [
                                "workflow-enrichment-code"
                            ],
                            "parsed_content": {
                                "name": "SAST Workflow",
                                "jobs": {
                                    "static-code-analysis-scala": {
                                        "asset_type": "repo",
                                        "runner": "github_actions",
                                        "if": {
                                            "languages": [
                                                "scala"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run semgrep scala",
                                                "with": {
                                                    "args": "--json --config=/semgrep-scala-config.yml --metrics=off --severity=ERROR \\${WORK_DIR:-.}"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-semgrep-alpine:main",
                                                "tags": {
                                                    "security_tool": "Semgrep",
                                                    "links": {
                                                        "security_tool": "https://github.com/returntocorp/semgrep",
                                                        "github": "https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "scala"
                                            ]
                                        }
                                    },
                                    "static-code-analysis-go": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "languages": [
                                                "go"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run Go",
                                                "with": {
                                                    "args": "-fmt=json -severity=high \\${WORK_DIR:-.}/..."
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-gosec-alpine:main",
                                                "tags": {
                                                    "security_tool": "Gosec",
                                                    "links": {
                                                        "security_tool": "https://github.com/securego/gosec",
                                                        "github": "https://github.com/jitsecurity-controls/jit-golang-code-scanning-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "go"
                                            ]
                                        }
                                    },
                                    "static-code-analysis-python": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "languages": [
                                                "python"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run Bandit",
                                                "with": {
                                                    "args": "-r \\${WORK_DIR:-.} -f json -q -lll -iii"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-bandit-slim:main",
                                                "tags": {
                                                    "security_tool": "Bandit",
                                                    "links": {
                                                        "security_tool": "https://github.com/PyCQA/bandit",
                                                        "github": "https://github.com/jitsecurity-controls/jit-python-code-scanning-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "python"
                                            ]
                                        }
                                    },
                                    "static-code-analysis-java": {
                                        "asset_type": "repo",
                                        "runner": "github_actions",
                                        "if": {
                                            "languages": [
                                                "java"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run semgrep java",
                                                "with": {
                                                    "args": "--json --config=/semgrep-java-config.yml --metrics=off --severity=ERROR \\${WORK_DIR:-.}"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-semgrep-alpine:main",
                                                "tags": {
                                                    "security_tool": "Semgrep",
                                                    "links": {
                                                        "security_tool": "https://github.com/returntocorp/semgrep",
                                                        "github": "https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "java"
                                            ]
                                        }
                                    },
                                    "static-code-analysis-js": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "languages": [
                                                "javascript",
                                                "typescript"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run semgrep javascript and typescript",
                                                "with": {
                                                    "args": "--json --config=/semgrep-ts-config.yml --metrics=off --severity=ERROR \\${WORK_DIR:-.}"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-semgrep-alpine:main",
                                                "tags": {
                                                    "security_tool": "Semgrep",
                                                    "links": {
                                                        "security_tool": "https://github.com/returntocorp/semgrep",
                                                        "github": "https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "javascript",
                                                "typescript",
                                                "JS",
                                                "TS"
                                            ]
                                        }
                                    }
                                },
                                "trigger": {
                                    "true": [
                                        "item_activated",
                                        "resource_added",
                                        "pull_request_created",
                                        "pull_request_updated",
                                        "merge_default_branch"
                                    ],
                                    "depends_on": [
                                        "workflow-enrichment-code"
                                    ]
                                }
                            },
                            "params": null,
                            "plan_item_template_slug": null,
                            "asset_types": [
                                "repo",
                                "repo",
                                "repo",
                                "repo",
                                "repo",
                                "repo"
                            ]
                        },
                        "raw_job_template": {
                            "asset_type": "repo",
                            "default": true,
                            "runner": "github_actions",
                            "if": {
                                "languages": [
                                    "javascript",
                                    "typescript"
                                ]
                            },
                            "steps": [
                                {
                                    "name": "Run semgrep javascript and typescript",
                                    "with": {
                                        "args": "--json --config=/semgrep-ts-config.yml --metrics=off --severity=ERROR \\${WORK_DIR:-.}"
                                    },
                                    "uses": "ghcr.io/jitsecurity-controls/control-semgrep-alpine:main",
                                    "tags": {
                                        "security_tool": "Semgrep",
                                        "links": {
                                            "security_tool": "https://github.com/returntocorp/semgrep",
                                            "github": "https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control"
                                        }
                                    }
                                }
                            ],
                            "tags": {
                                "languages": [
                                    "javascript",
                                    "typescript",
                                    "JS",
                                    "TS"
                                ]
                            }
                        },
                        "depends_on_slugs": [
                            "workflow-enrichment-code"
                        ]
                    },
                    {
                        "plan_item_slug": "item-code-vulnerability",
                        "workflow_slug": "workflow-sast",
                        "workflow_name": "SAST Workflow",
                        "job_name": "static-code-analysis-scala",
                        "workflow_template": {
                            "slug": "workflow-sast",
                            "name": "SAST Workflow",
                            "type": "workflow",
                            "default": true,
                            "content": "jobs:\n  static-code-analysis-go:\n    asset_type: repo\n    default: true\n    if:\n      languages:\n      - go\n    runner: github_actions\n    steps:\n    - name: Run Go\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-golang-code-scanning-control\n          security_tool: https://github.com/securego/gosec\n        security_tool: Gosec\n      uses: ghcr.io/jitsecurity-controls/control-gosec-alpine:main\n      with:\n        args: -fmt=json -severity=high \\${WORK_DIR:-.}/...\n    tags:\n      languages:\n      - go\n  static-code-analysis-java:\n    asset_type: repo\n    if:\n      languages:\n      - java\n    runner: github_actions\n    steps:\n    - name: Run semgrep java\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control\n          security_tool: https://github.com/returntocorp/semgrep\n        security_tool: Semgrep\n      uses: ghcr.io/jitsecurity-controls/control-semgrep-alpine:main\n      with:\n        args: --json --config=/semgrep-java-config.yml --metrics=off --severity=ERROR\n          \\${WORK_DIR:-.}\n    tags:\n      languages:\n      - java\n  static-code-analysis-js:\n    asset_type: repo\n    default: true\n    if:\n      languages:\n      - javascript\n      - typescript\n    runner: github_actions\n    steps:\n    - name: Run semgrep javascript and typescript\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control\n          security_tool: https://github.com/returntocorp/semgrep\n        security_tool: Semgrep\n      uses: ghcr.io/jitsecurity-controls/control-semgrep-alpine:main\n      with:\n        args: --json --config=/semgrep-ts-config.yml --metrics=off --severity=ERROR\n          \\${WORK_DIR:-.}\n    tags:\n      languages:\n      - javascript\n      - typescript\n      - JS\n      - TS\n  static-code-analysis-python:\n    asset_type: repo\n    default: true\n    if:\n      languages:\n      - python\n    runner: github_actions\n    steps:\n    - name: Run Bandit\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-python-code-scanning-control\n          security_tool: https://github.com/PyCQA/bandit\n        security_tool: Bandit\n      uses: ghcr.io/jitsecurity-controls/control-bandit-slim:main\n      with:\n        args: -r \\${WORK_DIR:-.} -f json -q -lll -iii\n    tags:\n      languages:\n      - python\n  static-code-analysis-scala:\n    asset_type: repo\n    if:\n      languages:\n      - scala\n    runner: github_actions\n    steps:\n    - name: Run semgrep scala\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control\n          security_tool: https://github.com/returntocorp/semgrep\n        security_tool: Semgrep\n      uses: ghcr.io/jitsecurity-controls/control-semgrep-alpine:main\n      with:\n        args: --json --config=/semgrep-scala-config.yml --metrics=off --severity=ERROR\n          \\${WORK_DIR:-.}\n    tags:\n      languages:\n      - scala\nname: SAST Workflow\ntrigger:\n  true:\n  - item_activated\n  - resource_added\n  - pull_request_created\n  - pull_request_updated\n  - merge_default_branch\n  depends_on:\n  - workflow-enrichment-code\n",
                            "depends_on": [
                                "workflow-enrichment-code"
                            ],
                            "parsed_content": {
                                "name": "SAST Workflow",
                                "jobs": {
                                    "static-code-analysis-scala": {
                                        "asset_type": "repo",
                                        "runner": "github_actions",
                                        "if": {
                                            "languages": [
                                                "scala"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run semgrep scala",
                                                "with": {
                                                    "args": "--json --config=/semgrep-scala-config.yml --metrics=off --severity=ERROR \\${WORK_DIR:-.}"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-semgrep-alpine:main",
                                                "tags": {
                                                    "security_tool": "Semgrep",
                                                    "links": {
                                                        "security_tool": "https://github.com/returntocorp/semgrep",
                                                        "github": "https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "scala"
                                            ]
                                        }
                                    },
                                    "static-code-analysis-go": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "languages": [
                                                "go"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run Go",
                                                "with": {
                                                    "args": "-fmt=json -severity=high \\${WORK_DIR:-.}/..."
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-gosec-alpine:main",
                                                "tags": {
                                                    "security_tool": "Gosec",
                                                    "links": {
                                                        "security_tool": "https://github.com/securego/gosec",
                                                        "github": "https://github.com/jitsecurity-controls/jit-golang-code-scanning-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "go"
                                            ]
                                        }
                                    },
                                    "static-code-analysis-python": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "languages": [
                                                "python"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run Bandit",
                                                "with": {
                                                    "args": "-r \\${WORK_DIR:-.} -f json -q -lll -iii"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-bandit-slim:main",
                                                "tags": {
                                                    "security_tool": "Bandit",
                                                    "links": {
                                                        "security_tool": "https://github.com/PyCQA/bandit",
                                                        "github": "https://github.com/jitsecurity-controls/jit-python-code-scanning-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "python"
                                            ]
                                        }
                                    },
                                    "static-code-analysis-java": {
                                        "asset_type": "repo",
                                        "runner": "github_actions",
                                        "if": {
                                            "languages": [
                                                "java"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run semgrep java",
                                                "with": {
                                                    "args": "--json --config=/semgrep-java-config.yml --metrics=off --severity=ERROR \\${WORK_DIR:-.}"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-semgrep-alpine:main",
                                                "tags": {
                                                    "security_tool": "Semgrep",
                                                    "links": {
                                                        "security_tool": "https://github.com/returntocorp/semgrep",
                                                        "github": "https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "java"
                                            ]
                                        }
                                    },
                                    "static-code-analysis-js": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "languages": [
                                                "javascript",
                                                "typescript"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run semgrep javascript and typescript",
                                                "with": {
                                                    "args": "--json --config=/semgrep-ts-config.yml --metrics=off --severity=ERROR \\${WORK_DIR:-.}"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-semgrep-alpine:main",
                                                "tags": {
                                                    "security_tool": "Semgrep",
                                                    "links": {
                                                        "security_tool": "https://github.com/returntocorp/semgrep",
                                                        "github": "https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "javascript",
                                                "typescript",
                                                "JS",
                                                "TS"
                                            ]
                                        }
                                    }
                                },
                                "trigger": {
                                    "true": [
                                        "item_activated",
                                        "resource_added",
                                        "pull_request_created",
                                        "pull_request_updated",
                                        "merge_default_branch"
                                    ],
                                    "depends_on": [
                                        "workflow-enrichment-code"
                                    ]
                                }
                            },
                            "params": null,
                            "plan_item_template_slug": null,
                            "asset_types": [
                                "repo",
                                "repo",
                                "repo",
                                "repo",
                                "repo",
                                "repo"
                            ]
                        },
                        "raw_job_template": {
                            "asset_type": "repo",
                            "runner": "github_actions",
                            "if": {
                                "languages": [
                                    "scala"
                                ]
                            },
                            "steps": [
                                {
                                    "name": "Run semgrep scala",
                                    "with": {
                                        "args": "--json --config=/semgrep-scala-config.yml --metrics=off --severity=ERROR \\${WORK_DIR:-.}"
                                    },
                                    "uses": "ghcr.io/jitsecurity-controls/control-semgrep-alpine:main",
                                    "tags": {
                                        "security_tool": "Semgrep",
                                        "links": {
                                            "security_tool": "https://github.com/returntocorp/semgrep",
                                            "github": "https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control"
                                        }
                                    }
                                }
                            ],
                            "tags": {
                                "languages": [
                                    "scala"
                                ]
                            }
                        },
                        "depends_on_slugs": [
                            "workflow-enrichment-code"
                        ]
                    },
                    {
                        "plan_item_slug": "item-code-vulnerability",
                        "workflow_slug": "workflow-sast",
                        "workflow_name": "SAST Workflow",
                        "job_name": "static-code-analysis-java",
                        "workflow_template": {
                            "slug": "workflow-sast",
                            "name": "SAST Workflow",
                            "type": "workflow",
                            "default": true,
                            "content": "jobs:\n  static-code-analysis-go:\n    asset_type: repo\n    default: true\n    if:\n      languages:\n      - go\n    runner: github_actions\n    steps:\n    - name: Run Go\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-golang-code-scanning-control\n          security_tool: https://github.com/securego/gosec\n        security_tool: Gosec\n      uses: ghcr.io/jitsecurity-controls/control-gosec-alpine:main\n      with:\n        args: -fmt=json -severity=high \\${WORK_DIR:-.}/...\n    tags:\n      languages:\n      - go\n  static-code-analysis-java:\n    asset_type: repo\n    if:\n      languages:\n      - java\n    runner: github_actions\n    steps:\n    - name: Run semgrep java\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control\n          security_tool: https://github.com/returntocorp/semgrep\n        security_tool: Semgrep\n      uses: ghcr.io/jitsecurity-controls/control-semgrep-alpine:main\n      with:\n        args: --json --config=/semgrep-java-config.yml --metrics=off --severity=ERROR\n          \\${WORK_DIR:-.}\n    tags:\n      languages:\n      - java\n  static-code-analysis-js:\n    asset_type: repo\n    default: true\n    if:\n      languages:\n      - javascript\n      - typescript\n    runner: github_actions\n    steps:\n    - name: Run semgrep javascript and typescript\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control\n          security_tool: https://github.com/returntocorp/semgrep\n        security_tool: Semgrep\n      uses: ghcr.io/jitsecurity-controls/control-semgrep-alpine:main\n      with:\n        args: --json --config=/semgrep-ts-config.yml --metrics=off --severity=ERROR\n          \\${WORK_DIR:-.}\n    tags:\n      languages:\n      - javascript\n      - typescript\n      - JS\n      - TS\n  static-code-analysis-python:\n    asset_type: repo\n    default: true\n    if:\n      languages:\n      - python\n    runner: github_actions\n    steps:\n    - name: Run Bandit\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-python-code-scanning-control\n          security_tool: https://github.com/PyCQA/bandit\n        security_tool: Bandit\n      uses: ghcr.io/jitsecurity-controls/control-bandit-slim:main\n      with:\n        args: -r \\${WORK_DIR:-.} -f json -q -lll -iii\n    tags:\n      languages:\n      - python\n  static-code-analysis-scala:\n    asset_type: repo\n    if:\n      languages:\n      - scala\n    runner: github_actions\n    steps:\n    - name: Run semgrep scala\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control\n          security_tool: https://github.com/returntocorp/semgrep\n        security_tool: Semgrep\n      uses: ghcr.io/jitsecurity-controls/control-semgrep-alpine:main\n      with:\n        args: --json --config=/semgrep-scala-config.yml --metrics=off --severity=ERROR\n          \\${WORK_DIR:-.}\n    tags:\n      languages:\n      - scala\nname: SAST Workflow\ntrigger:\n  true:\n  - item_activated\n  - resource_added\n  - pull_request_created\n  - pull_request_updated\n  - merge_default_branch\n  depends_on:\n  - workflow-enrichment-code\n",
                            "depends_on": [
                                "workflow-enrichment-code"
                            ],
                            "parsed_content": {
                                "name": "SAST Workflow",
                                "jobs": {
                                    "static-code-analysis-scala": {
                                        "asset_type": "repo",
                                        "runner": "github_actions",
                                        "if": {
                                            "languages": [
                                                "scala"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run semgrep scala",
                                                "with": {
                                                    "args": "--json --config=/semgrep-scala-config.yml --metrics=off --severity=ERROR \\${WORK_DIR:-.}"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-semgrep-alpine:main",
                                                "tags": {
                                                    "security_tool": "Semgrep",
                                                    "links": {
                                                        "security_tool": "https://github.com/returntocorp/semgrep",
                                                        "github": "https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "scala"
                                            ]
                                        }
                                    },
                                    "static-code-analysis-go": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "languages": [
                                                "go"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run Go",
                                                "with": {
                                                    "args": "-fmt=json -severity=high \\${WORK_DIR:-.}/..."
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-gosec-alpine:main",
                                                "tags": {
                                                    "security_tool": "Gosec",
                                                    "links": {
                                                        "security_tool": "https://github.com/securego/gosec",
                                                        "github": "https://github.com/jitsecurity-controls/jit-golang-code-scanning-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "go"
                                            ]
                                        }
                                    },
                                    "static-code-analysis-python": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "languages": [
                                                "python"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run Bandit",
                                                "with": {
                                                    "args": "-r \\${WORK_DIR:-.} -f json -q -lll -iii"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-bandit-slim:main",
                                                "tags": {
                                                    "security_tool": "Bandit",
                                                    "links": {
                                                        "security_tool": "https://github.com/PyCQA/bandit",
                                                        "github": "https://github.com/jitsecurity-controls/jit-python-code-scanning-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "python"
                                            ]
                                        }
                                    },
                                    "static-code-analysis-java": {
                                        "asset_type": "repo",
                                        "runner": "github_actions",
                                        "if": {
                                            "languages": [
                                                "java"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run semgrep java",
                                                "with": {
                                                    "args": "--json --config=/semgrep-java-config.yml --metrics=off --severity=ERROR \\${WORK_DIR:-.}"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-semgrep-alpine:main",
                                                "tags": {
                                                    "security_tool": "Semgrep",
                                                    "links": {
                                                        "security_tool": "https://github.com/returntocorp/semgrep",
                                                        "github": "https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "java"
                                            ]
                                        }
                                    },
                                    "static-code-analysis-js": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "languages": [
                                                "javascript",
                                                "typescript"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run semgrep javascript and typescript",
                                                "with": {
                                                    "args": "--json --config=/semgrep-ts-config.yml --metrics=off --severity=ERROR \\${WORK_DIR:-.}"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-semgrep-alpine:main",
                                                "tags": {
                                                    "security_tool": "Semgrep",
                                                    "links": {
                                                        "security_tool": "https://github.com/returntocorp/semgrep",
                                                        "github": "https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "javascript",
                                                "typescript",
                                                "JS",
                                                "TS"
                                            ]
                                        }
                                    }
                                },
                                "trigger": {
                                    "true": [
                                        "item_activated",
                                        "resource_added",
                                        "pull_request_created",
                                        "pull_request_updated",
                                        "merge_default_branch"
                                    ],
                                    "depends_on": [
                                        "workflow-enrichment-code"
                                    ]
                                }
                            },
                            "params": null,
                            "plan_item_template_slug": null,
                            "asset_types": [
                                "repo",
                                "repo",
                                "repo",
                                "repo",
                                "repo",
                                "repo"
                            ]
                        },
                        "raw_job_template": {
                            "asset_type": "repo",
                            "runner": "github_actions",
                            "if": {
                                "languages": [
                                    "java"
                                ]
                            },
                            "steps": [
                                {
                                    "name": "Run semgrep java",
                                    "with": {
                                        "args": "--json --config=/semgrep-java-config.yml --metrics=off --severity=ERROR \\${WORK_DIR:-.}"
                                    },
                                    "uses": "ghcr.io/jitsecurity-controls/control-semgrep-alpine:main",
                                    "tags": {
                                        "security_tool": "Semgrep",
                                        "links": {
                                            "security_tool": "https://github.com/returntocorp/semgrep",
                                            "github": "https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control"
                                        }
                                    }
                                }
                            ],
                            "tags": {
                                "languages": [
                                    "java"
                                ]
                            }
                        },
                        "depends_on_slugs": [
                            "workflow-enrichment-code"
                        ]
                    },
                    {
                        "plan_item_slug": "item-code-vulnerability",
                        "workflow_slug": "workflow-sast",
                        "workflow_name": "SAST Workflow",
                        "job_name": "static-code-analysis-python",
                        "workflow_template": {
                            "slug": "workflow-sast",
                            "name": "SAST Workflow",
                            "type": "workflow",
                            "default": true,
                            "content": "jobs:\n  static-code-analysis-go:\n    asset_type: repo\n    default: true\n    if:\n      languages:\n      - go\n    runner: github_actions\n    steps:\n    - name: Run Go\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-golang-code-scanning-control\n          security_tool: https://github.com/securego/gosec\n        security_tool: Gosec\n      uses: ghcr.io/jitsecurity-controls/control-gosec-alpine:main\n      with:\n        args: -fmt=json -severity=high \\${WORK_DIR:-.}/...\n    tags:\n      languages:\n      - go\n  static-code-analysis-java:\n    asset_type: repo\n    if:\n      languages:\n      - java\n    runner: github_actions\n    steps:\n    - name: Run semgrep java\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control\n          security_tool: https://github.com/returntocorp/semgrep\n        security_tool: Semgrep\n      uses: ghcr.io/jitsecurity-controls/control-semgrep-alpine:main\n      with:\n        args: --json --config=/semgrep-java-config.yml --metrics=off --severity=ERROR\n          \\${WORK_DIR:-.}\n    tags:\n      languages:\n      - java\n  static-code-analysis-js:\n    asset_type: repo\n    default: true\n    if:\n      languages:\n      - javascript\n      - typescript\n    runner: github_actions\n    steps:\n    - name: Run semgrep javascript and typescript\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control\n          security_tool: https://github.com/returntocorp/semgrep\n        security_tool: Semgrep\n      uses: ghcr.io/jitsecurity-controls/control-semgrep-alpine:main\n      with:\n        args: --json --config=/semgrep-ts-config.yml --metrics=off --severity=ERROR\n          \\${WORK_DIR:-.}\n    tags:\n      languages:\n      - javascript\n      - typescript\n      - JS\n      - TS\n  static-code-analysis-python:\n    asset_type: repo\n    default: true\n    if:\n      languages:\n      - python\n    runner: github_actions\n    steps:\n    - name: Run Bandit\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-python-code-scanning-control\n          security_tool: https://github.com/PyCQA/bandit\n        security_tool: Bandit\n      uses: ghcr.io/jitsecurity-controls/control-bandit-slim:main\n      with:\n        args: -r \\${WORK_DIR:-.} -f json -q -lll -iii\n    tags:\n      languages:\n      - python\n  static-code-analysis-scala:\n    asset_type: repo\n    if:\n      languages:\n      - scala\n    runner: github_actions\n    steps:\n    - name: Run semgrep scala\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control\n          security_tool: https://github.com/returntocorp/semgrep\n        security_tool: Semgrep\n      uses: ghcr.io/jitsecurity-controls/control-semgrep-alpine:main\n      with:\n        args: --json --config=/semgrep-scala-config.yml --metrics=off --severity=ERROR\n          \\${WORK_DIR:-.}\n    tags:\n      languages:\n      - scala\nname: SAST Workflow\ntrigger:\n  true:\n  - item_activated\n  - resource_added\n  - pull_request_created\n  - pull_request_updated\n  - merge_default_branch\n  depends_on:\n  - workflow-enrichment-code\n",
                            "depends_on": [
                                "workflow-enrichment-code"
                            ],
                            "parsed_content": {
                                "name": "SAST Workflow",
                                "jobs": {
                                    "static-code-analysis-scala": {
                                        "asset_type": "repo",
                                        "runner": "github_actions",
                                        "if": {
                                            "languages": [
                                                "scala"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run semgrep scala",
                                                "with": {
                                                    "args": "--json --config=/semgrep-scala-config.yml --metrics=off --severity=ERROR \\${WORK_DIR:-.}"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-semgrep-alpine:main",
                                                "tags": {
                                                    "security_tool": "Semgrep",
                                                    "links": {
                                                        "security_tool": "https://github.com/returntocorp/semgrep",
                                                        "github": "https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "scala"
                                            ]
                                        }
                                    },
                                    "static-code-analysis-go": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "languages": [
                                                "go"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run Go",
                                                "with": {
                                                    "args": "-fmt=json -severity=high \\${WORK_DIR:-.}/..."
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-gosec-alpine:main",
                                                "tags": {
                                                    "security_tool": "Gosec",
                                                    "links": {
                                                        "security_tool": "https://github.com/securego/gosec",
                                                        "github": "https://github.com/jitsecurity-controls/jit-golang-code-scanning-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "go"
                                            ]
                                        }
                                    },
                                    "static-code-analysis-python": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "languages": [
                                                "python"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run Bandit",
                                                "with": {
                                                    "args": "-r \\${WORK_DIR:-.} -f json -q -lll -iii"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-bandit-slim:main",
                                                "tags": {
                                                    "security_tool": "Bandit",
                                                    "links": {
                                                        "security_tool": "https://github.com/PyCQA/bandit",
                                                        "github": "https://github.com/jitsecurity-controls/jit-python-code-scanning-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "python"
                                            ]
                                        }
                                    },
                                    "static-code-analysis-java": {
                                        "asset_type": "repo",
                                        "runner": "github_actions",
                                        "if": {
                                            "languages": [
                                                "java"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run semgrep java",
                                                "with": {
                                                    "args": "--json --config=/semgrep-java-config.yml --metrics=off --severity=ERROR \\${WORK_DIR:-.}"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-semgrep-alpine:main",
                                                "tags": {
                                                    "security_tool": "Semgrep",
                                                    "links": {
                                                        "security_tool": "https://github.com/returntocorp/semgrep",
                                                        "github": "https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "java"
                                            ]
                                        }
                                    },
                                    "static-code-analysis-js": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "languages": [
                                                "javascript",
                                                "typescript"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run semgrep javascript and typescript",
                                                "with": {
                                                    "args": "--json --config=/semgrep-ts-config.yml --metrics=off --severity=ERROR \\${WORK_DIR:-.}"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-semgrep-alpine:main",
                                                "tags": {
                                                    "security_tool": "Semgrep",
                                                    "links": {
                                                        "security_tool": "https://github.com/returntocorp/semgrep",
                                                        "github": "https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "javascript",
                                                "typescript",
                                                "JS",
                                                "TS"
                                            ]
                                        }
                                    }
                                },
                                "trigger": {
                                    "true": [
                                        "item_activated",
                                        "resource_added",
                                        "pull_request_created",
                                        "pull_request_updated",
                                        "merge_default_branch"
                                    ],
                                    "depends_on": [
                                        "workflow-enrichment-code"
                                    ]
                                }
                            },
                            "params": null,
                            "plan_item_template_slug": null,
                            "asset_types": [
                                "repo",
                                "repo",
                                "repo",
                                "repo",
                                "repo",
                                "repo"
                            ]
                        },
                        "raw_job_template": {
                            "asset_type": "repo",
                            "default": true,
                            "runner": "github_actions",
                            "if": {
                                "languages": [
                                    "python"
                                ]
                            },
                            "steps": [
                                {
                                    "name": "Run Bandit",
                                    "with": {
                                        "args": "-r \\${WORK_DIR:-.} -f json -q -lll -iii"
                                    },
                                    "uses": "ghcr.io/jitsecurity-controls/control-bandit-slim:main",
                                    "tags": {
                                        "security_tool": "Bandit",
                                        "links": {
                                            "security_tool": "https://github.com/PyCQA/bandit",
                                            "github": "https://github.com/jitsecurity-controls/jit-python-code-scanning-control"
                                        }
                                    }
                                }
                            ],
                            "tags": {
                                "languages": [
                                    "python"
                                ]
                            }
                        },
                        "depends_on_slugs": [
                            "workflow-enrichment-code"
                        ]
                    },
                    {
                        "plan_item_slug": "item-dependency-check",
                        "workflow_slug": "workflow-sca",
                        "workflow_name": "SCA Workflow",
                        "job_name": "software-component-analysis-go",
                        "workflow_template": {
                            "slug": "workflow-sca",
                            "name": "SCA Workflow",
                            "type": "workflow",
                            "default": true,
                            "content": "jobs:\n  software-component-analysis:\n    asset_type: repo\n    default: true\n    if:\n      package_managers:\n      - pip\n      - composer\n    runner: github_actions\n    steps:\n    - name: Run osv-scanner\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-osv-scanner-control\n          security_tool: https://github.com/google/osv-scanner\n        security_tool: OSV Scanner\n      uses: ghcr.io/jitsecurity-controls/control-osv-scanner-alpine:main\n      with:\n        args: --recursive \\${WORK_DIR:-.}\n    tags:\n      languages:\n      - python\n      - php_deps\n  software-component-analysis-go:\n    asset_type: repo\n    default: true\n    if:\n      package_managers:\n      - go_modules\n    runner: github_actions\n    steps:\n    - name: Run nancy\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-nancy-control\n          security_tool: https://github.com/sonatype-nexus-community/nancy\n        security_tool: Nancy\n      uses: ghcr.io/jitsecurity-controls/control-nancy-alpine:main\n    tags:\n      languages:\n      - go\n      - go_deps\n  software-component-analysis-js:\n    asset_type: repo\n    default: true\n    if:\n      package_managers:\n      - npm\n      - yarn\n    runner: github_actions\n    steps:\n    - name: Run npm audit\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-dependency-check-node-control\n          security_tool: https://docs.npmjs.com/cli/v9/commands/npm-audit\n        security_tool: Npm-audit\n      uses: ghcr.io/jitsecurity-controls/control-npm-audit-slim:main\n      with:\n        output_file: /code/jit-report/enriched-audit-results.json\n    tags:\n      languages:\n      - js_deps\nname: SCA Workflow\ntrigger:\n  true:\n  - item_activated\n  - resource_added\n  - pull_request_created\n  - pull_request_updated\n  - merge_default_branch\n  depends_on:\n  - workflow-enrichment-code\n",
                            "depends_on": [
                                "workflow-enrichment-code"
                            ],
                            "parsed_content": {
                                "name": "SCA Workflow",
                                "jobs": {
                                    "software-component-analysis-js": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "package_managers": [
                                                "npm",
                                                "yarn"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run npm audit",
                                                "with": {
                                                    "output_file": "/code/jit-report/enriched-audit-results.json"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-npm-audit-slim:main",
                                                "tags": {
                                                    "security_tool": "Npm-audit",
                                                    "links": {
                                                        "security_tool": "https://docs.npmjs.com/cli/v9/commands/npm-audit",
                                                        "github": "https://github.com/jitsecurity-controls/jit-dependency-check-node-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "js_deps"
                                            ]
                                        }
                                    },
                                    "software-component-analysis-go": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "package_managers": [
                                                "go_modules"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run nancy",
                                                "uses": "ghcr.io/jitsecurity-controls/control-nancy-alpine:main",
                                                "tags": {
                                                    "security_tool": "Nancy",
                                                    "links": {
                                                        "security_tool": "https://github.com/sonatype-nexus-community/nancy",
                                                        "github": "https://github.com/jitsecurity-controls/jit-nancy-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "go",
                                                "go_deps"
                                            ]
                                        }
                                    },
                                    "software-component-analysis": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "package_managers": [
                                                "pip",
                                                "composer"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run osv-scanner",
                                                "with": {
                                                    "args": "--recursive \\${WORK_DIR:-.}"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-osv-scanner-alpine:main",
                                                "tags": {
                                                    "security_tool": "OSV Scanner",
                                                    "links": {
                                                        "security_tool": "https://github.com/google/osv-scanner",
                                                        "github": "https://github.com/jitsecurity-controls/jit-osv-scanner-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "python",
                                                "php_deps"
                                            ]
                                        }
                                    }
                                },
                                "trigger": {
                                    "true": [
                                        "item_activated",
                                        "resource_added",
                                        "pull_request_created",
                                        "pull_request_updated",
                                        "merge_default_branch"
                                    ],
                                    "depends_on": [
                                        "workflow-enrichment-code"
                                    ]
                                }
                            },
                            "params": null,
                            "plan_item_template_slug": null,
                            "asset_types": [
                                "repo",
                                "repo",
                                "repo"
                            ]
                        },
                        "raw_job_template": {
                            "asset_type": "repo",
                            "default": true,
                            "runner": "github_actions",
                            "if": {
                                "package_managers": [
                                    "go_modules"
                                ]
                            },
                            "steps": [
                                {
                                    "name": "Run nancy",
                                    "uses": "ghcr.io/jitsecurity-controls/control-nancy-alpine:main",
                                    "tags": {
                                        "security_tool": "Nancy",
                                        "links": {
                                            "security_tool": "https://github.com/sonatype-nexus-community/nancy",
                                            "github": "https://github.com/jitsecurity-controls/jit-nancy-control"
                                        }
                                    }
                                }
                            ],
                            "tags": {
                                "languages": [
                                    "go",
                                    "go_deps"
                                ]
                            }
                        },
                        "depends_on_slugs": [
                            "workflow-enrichment-code"
                        ]
                    },
                    {
                        "plan_item_slug": "item-dependency-check",
                        "workflow_slug": "workflow-sca",
                        "workflow_name": "SCA Workflow",
                        "job_name": "software-component-analysis-js",
                        "workflow_template": {
                            "slug": "workflow-sca",
                            "name": "SCA Workflow",
                            "type": "workflow",
                            "default": true,
                            "content": "jobs:\n  software-component-analysis:\n    asset_type: repo\n    default: true\n    if:\n      package_managers:\n      - pip\n      - composer\n    runner: github_actions\n    steps:\n    - name: Run osv-scanner\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-osv-scanner-control\n          security_tool: https://github.com/google/osv-scanner\n        security_tool: OSV Scanner\n      uses: ghcr.io/jitsecurity-controls/control-osv-scanner-alpine:main\n      with:\n        args: --recursive \\${WORK_DIR:-.}\n    tags:\n      languages:\n      - python\n      - php_deps\n  software-component-analysis-go:\n    asset_type: repo\n    default: true\n    if:\n      package_managers:\n      - go_modules\n    runner: github_actions\n    steps:\n    - name: Run nancy\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-nancy-control\n          security_tool: https://github.com/sonatype-nexus-community/nancy\n        security_tool: Nancy\n      uses: ghcr.io/jitsecurity-controls/control-nancy-alpine:main\n    tags:\n      languages:\n      - go\n      - go_deps\n  software-component-analysis-js:\n    asset_type: repo\n    default: true\n    if:\n      package_managers:\n      - npm\n      - yarn\n    runner: github_actions\n    steps:\n    - name: Run npm audit\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-dependency-check-node-control\n          security_tool: https://docs.npmjs.com/cli/v9/commands/npm-audit\n        security_tool: Npm-audit\n      uses: ghcr.io/jitsecurity-controls/control-npm-audit-slim:main\n      with:\n        output_file: /code/jit-report/enriched-audit-results.json\n    tags:\n      languages:\n      - js_deps\nname: SCA Workflow\ntrigger:\n  true:\n  - item_activated\n  - resource_added\n  - pull_request_created\n  - pull_request_updated\n  - merge_default_branch\n  depends_on:\n  - workflow-enrichment-code\n",
                            "depends_on": [
                                "workflow-enrichment-code"
                            ],
                            "parsed_content": {
                                "name": "SCA Workflow",
                                "jobs": {
                                    "software-component-analysis-js": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "package_managers": [
                                                "npm",
                                                "yarn"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run npm audit",
                                                "with": {
                                                    "output_file": "/code/jit-report/enriched-audit-results.json"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-npm-audit-slim:main",
                                                "tags": {
                                                    "security_tool": "Npm-audit",
                                                    "links": {
                                                        "security_tool": "https://docs.npmjs.com/cli/v9/commands/npm-audit",
                                                        "github": "https://github.com/jitsecurity-controls/jit-dependency-check-node-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "js_deps"
                                            ]
                                        }
                                    },
                                    "software-component-analysis-go": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "package_managers": [
                                                "go_modules"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run nancy",
                                                "uses": "ghcr.io/jitsecurity-controls/control-nancy-alpine:main",
                                                "tags": {
                                                    "security_tool": "Nancy",
                                                    "links": {
                                                        "security_tool": "https://github.com/sonatype-nexus-community/nancy",
                                                        "github": "https://github.com/jitsecurity-controls/jit-nancy-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "go",
                                                "go_deps"
                                            ]
                                        }
                                    },
                                    "software-component-analysis": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "package_managers": [
                                                "pip",
                                                "composer"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run osv-scanner",
                                                "with": {
                                                    "args": "--recursive \\${WORK_DIR:-.}"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-osv-scanner-alpine:main",
                                                "tags": {
                                                    "security_tool": "OSV Scanner",
                                                    "links": {
                                                        "security_tool": "https://github.com/google/osv-scanner",
                                                        "github": "https://github.com/jitsecurity-controls/jit-osv-scanner-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "python",
                                                "php_deps"
                                            ]
                                        }
                                    }
                                },
                                "trigger": {
                                    "true": [
                                        "item_activated",
                                        "resource_added",
                                        "pull_request_created",
                                        "pull_request_updated",
                                        "merge_default_branch"
                                    ],
                                    "depends_on": [
                                        "workflow-enrichment-code"
                                    ]
                                }
                            },
                            "params": null,
                            "plan_item_template_slug": null,
                            "asset_types": [
                                "repo",
                                "repo",
                                "repo"
                            ]
                        },
                        "raw_job_template": {
                            "asset_type": "repo",
                            "default": true,
                            "runner": "github_actions",
                            "if": {
                                "package_managers": [
                                    "npm",
                                    "yarn"
                                ]
                            },
                            "steps": [
                                {
                                    "name": "Run npm audit",
                                    "with": {
                                        "output_file": "/code/jit-report/enriched-audit-results.json"
                                    },
                                    "uses": "ghcr.io/jitsecurity-controls/control-npm-audit-slim:main",
                                    "tags": {
                                        "security_tool": "Npm-audit",
                                        "links": {
                                            "security_tool": "https://docs.npmjs.com/cli/v9/commands/npm-audit",
                                            "github": "https://github.com/jitsecurity-controls/jit-dependency-check-node-control"
                                        }
                                    }
                                }
                            ],
                            "tags": {
                                "languages": [
                                    "js_deps"
                                ]
                            }
                        },
                        "depends_on_slugs": [
                            "workflow-enrichment-code"
                        ]
                    },
                    {
                        "plan_item_slug": "item-dependency-check",
                        "workflow_slug": "workflow-sca",
                        "workflow_name": "SCA Workflow",
                        "job_name": "software-component-analysis",
                        "workflow_template": {
                            "slug": "workflow-sca",
                            "name": "SCA Workflow",
                            "type": "workflow",
                            "default": true,
                            "content": "jobs:\n  software-component-analysis:\n    asset_type: repo\n    default: true\n    if:\n      package_managers:\n      - pip\n      - composer\n    runner: github_actions\n    steps:\n    - name: Run osv-scanner\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-osv-scanner-control\n          security_tool: https://github.com/google/osv-scanner\n        security_tool: OSV Scanner\n      uses: ghcr.io/jitsecurity-controls/control-osv-scanner-alpine:main\n      with:\n        args: --recursive \\${WORK_DIR:-.}\n    tags:\n      languages:\n      - python\n      - php_deps\n  software-component-analysis-go:\n    asset_type: repo\n    default: true\n    if:\n      package_managers:\n      - go_modules\n    runner: github_actions\n    steps:\n    - name: Run nancy\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-nancy-control\n          security_tool: https://github.com/sonatype-nexus-community/nancy\n        security_tool: Nancy\n      uses: ghcr.io/jitsecurity-controls/control-nancy-alpine:main\n    tags:\n      languages:\n      - go\n      - go_deps\n  software-component-analysis-js:\n    asset_type: repo\n    default: true\n    if:\n      package_managers:\n      - npm\n      - yarn\n    runner: github_actions\n    steps:\n    - name: Run npm audit\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-dependency-check-node-control\n          security_tool: https://docs.npmjs.com/cli/v9/commands/npm-audit\n        security_tool: Npm-audit\n      uses: ghcr.io/jitsecurity-controls/control-npm-audit-slim:main\n      with:\n        output_file: /code/jit-report/enriched-audit-results.json\n    tags:\n      languages:\n      - js_deps\nname: SCA Workflow\ntrigger:\n  true:\n  - item_activated\n  - resource_added\n  - pull_request_created\n  - pull_request_updated\n  - merge_default_branch\n  depends_on:\n  - workflow-enrichment-code\n",
                            "depends_on": [
                                "workflow-enrichment-code"
                            ],
                            "parsed_content": {
                                "name": "SCA Workflow",
                                "jobs": {
                                    "software-component-analysis-js": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "package_managers": [
                                                "npm",
                                                "yarn"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run npm audit",
                                                "with": {
                                                    "output_file": "/code/jit-report/enriched-audit-results.json"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-npm-audit-slim:main",
                                                "tags": {
                                                    "security_tool": "Npm-audit",
                                                    "links": {
                                                        "security_tool": "https://docs.npmjs.com/cli/v9/commands/npm-audit",
                                                        "github": "https://github.com/jitsecurity-controls/jit-dependency-check-node-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "js_deps"
                                            ]
                                        }
                                    },
                                    "software-component-analysis-go": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "package_managers": [
                                                "go_modules"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run nancy",
                                                "uses": "ghcr.io/jitsecurity-controls/control-nancy-alpine:main",
                                                "tags": {
                                                    "security_tool": "Nancy",
                                                    "links": {
                                                        "security_tool": "https://github.com/sonatype-nexus-community/nancy",
                                                        "github": "https://github.com/jitsecurity-controls/jit-nancy-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "go",
                                                "go_deps"
                                            ]
                                        }
                                    },
                                    "software-component-analysis": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "package_managers": [
                                                "pip",
                                                "composer"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run osv-scanner",
                                                "with": {
                                                    "args": "--recursive \\${WORK_DIR:-.}"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-osv-scanner-alpine:main",
                                                "tags": {
                                                    "security_tool": "OSV Scanner",
                                                    "links": {
                                                        "security_tool": "https://github.com/google/osv-scanner",
                                                        "github": "https://github.com/jitsecurity-controls/jit-osv-scanner-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "python",
                                                "php_deps"
                                            ]
                                        }
                                    }
                                },
                                "trigger": {
                                    "true": [
                                        "item_activated",
                                        "resource_added",
                                        "pull_request_created",
                                        "pull_request_updated",
                                        "merge_default_branch"
                                    ],
                                    "depends_on": [
                                        "workflow-enrichment-code"
                                    ]
                                }
                            },
                            "params": null,
                            "plan_item_template_slug": null,
                            "asset_types": [
                                "repo",
                                "repo",
                                "repo"
                            ]
                        },
                        "raw_job_template": {
                            "asset_type": "repo",
                            "default": true,
                            "runner": "github_actions",
                            "if": {
                                "package_managers": [
                                    "pip",
                                    "composer"
                                ]
                            },
                            "steps": [
                                {
                                    "name": "Run osv-scanner",
                                    "with": {
                                        "args": "--recursive \\${WORK_DIR:-.}"
                                    },
                                    "uses": "ghcr.io/jitsecurity-controls/control-osv-scanner-alpine:main",
                                    "tags": {
                                        "security_tool": "OSV Scanner",
                                        "links": {
                                            "security_tool": "https://github.com/google/osv-scanner",
                                            "github": "https://github.com/jitsecurity-controls/jit-osv-scanner-control"
                                        }
                                    }
                                }
                            ],
                            "tags": {
                                "languages": [
                                    "python",
                                    "php_deps"
                                ]
                            }
                        },
                        "depends_on_slugs": [
                            "workflow-enrichment-code"
                        ]
                    },
                    {
                        "plan_item_slug": "item-iac-misconfiguration-detection",
                        "workflow_slug": "workflow-iac-misconfiguration-detection",
                        "workflow_name": "IaC Misconfiguration Detection Workflow",
                        "job_name": "iac-misconfig-detection-terraform",
                        "workflow_template": {
                            "slug": "workflow-iac-misconfiguration-detection",
                            "name": "IaC Misconfiguration Detection Workflow",
                            "type": "workflow",
                            "default": true,
                            "content": "jobs:\n  iac-misconfig-detection-cloudformation:\n    asset_type: repo\n    default: true\n    if:\n      frameworks:\n      - cloudformation\n    runner: github_actions\n    steps:\n    - name: Run KICS (cloudformation)\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control\n          security_tool: https://github.com/Checkmarx/kics\n        security_tool: Kics\n      uses: ghcr.io/jitsecurity-controls/control-kics-alpine:main\n      with:\n        args: scan -t CloudFormation -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config\n          \\/cloudformation-config.yaml --disable-secrets\n        output_file: /code/jit-report/results.json\n    tags:\n      languages:\n      - cloudformation\n      - aws_cdk_output\n  iac-misconfig-detection-pulumi:\n    asset_type: repo\n    default: true\n    if:\n      frameworks:\n      - pulumi\n    runner: github_actions\n    steps:\n    - name: Run KICS (pulumi)\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control\n          security_tool: https://github.com/Checkmarx/kics\n        security_tool: Kics\n      uses: ghcr.io/jitsecurity-controls/control-kics-alpine:main\n      with:\n        args: scan -t Pulumi -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config\n          \\/pulumi-config.yaml --disable-secrets\n        output_file: /code/jit-report/results.json\n    tags:\n      languages:\n      - pulumi\n  iac-misconfig-detection-serverless:\n    asset_type: repo\n    default: true\n    if:\n      frameworks:\n      - serverless\n    runner: github_actions\n    steps:\n    - name: Run KICS (serverless)\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control\n          security_tool: https://github.com/Checkmarx/kics\n        security_tool: Kics\n      uses: ghcr.io/jitsecurity-controls/control-kics-alpine:main\n      with:\n        args: scan -t ServerlessFW -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config\n          \\/serverless-config.yaml --disable-secrets\n        output_file: /code/jit-report/results.json\n    tags:\n      languages:\n      - serverless\n  iac-misconfig-detection-terraform:\n    asset_type: repo\n    default: true\n    if:\n      frameworks:\n      - terraform\n    runner: github_actions\n    steps:\n    - name: Run KICS (terraform)\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control\n          security_tool: https://github.com/Checkmarx/kics\n        security_tool: Kics\n      uses: ghcr.io/jitsecurity-controls/control-kics-alpine:main\n      with:\n        args: scan -t Terraform -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config\n          \\/terraform-config.yaml --disable-secrets\n        output_file: /code/jit-report/results.json\n    tags:\n      languages:\n      - terraform\nname: IaC Misconfiguration Detection Workflow\ntrigger:\n  true:\n  - item_activated\n  - resource_added\n  - pull_request_created\n  - pull_request_updated\n  - merge_default_branch\n  depends_on:\n  - workflow-enrichment-code\n",
                            "depends_on": [
                                "workflow-enrichment-code"
                            ],
                            "parsed_content": {
                                "name": "IaC Misconfiguration Detection Workflow",
                                "jobs": {
                                    "iac-misconfig-detection-pulumi": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "frameworks": [
                                                "pulumi"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run KICS (pulumi)",
                                                "with": {
                                                    "args": "scan -t Pulumi -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/pulumi-config.yaml --disable-secrets",
                                                    "output_file": "/code/jit-report/results.json"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                                "tags": {
                                                    "security_tool": "Kics",
                                                    "links": {
                                                        "security_tool": "https://github.com/Checkmarx/kics",
                                                        "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "pulumi"
                                            ]
                                        }
                                    },
                                    "iac-misconfig-detection-cloudformation": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "frameworks": [
                                                "cloudformation"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run KICS (cloudformation)",
                                                "with": {
                                                    "args": "scan -t CloudFormation -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/cloudformation-config.yaml --disable-secrets",
                                                    "output_file": "/code/jit-report/results.json"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                                "tags": {
                                                    "security_tool": "Kics",
                                                    "links": {
                                                        "security_tool": "https://github.com/Checkmarx/kics",
                                                        "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "cloudformation",
                                                "aws_cdk_output"
                                            ]
                                        }
                                    },
                                    "iac-misconfig-detection-terraform": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "frameworks": [
                                                "terraform"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run KICS (terraform)",
                                                "with": {
                                                    "args": "scan -t Terraform -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/terraform-config.yaml --disable-secrets",
                                                    "output_file": "/code/jit-report/results.json"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                                "tags": {
                                                    "security_tool": "Kics",
                                                    "links": {
                                                        "security_tool": "https://github.com/Checkmarx/kics",
                                                        "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "terraform"
                                            ]
                                        }
                                    },
                                    "iac-misconfig-detection-serverless": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "frameworks": [
                                                "serverless"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run KICS (serverless)",
                                                "with": {
                                                    "args": "scan -t ServerlessFW -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/serverless-config.yaml --disable-secrets",
                                                    "output_file": "/code/jit-report/results.json"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                                "tags": {
                                                    "security_tool": "Kics",
                                                    "links": {
                                                        "security_tool": "https://github.com/Checkmarx/kics",
                                                        "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "serverless"
                                            ]
                                        }
                                    }
                                },
                                "trigger": {
                                    "true": [
                                        "item_activated",
                                        "resource_added",
                                        "pull_request_created",
                                        "pull_request_updated",
                                        "merge_default_branch"
                                    ],
                                    "depends_on": [
                                        "workflow-enrichment-code"
                                    ]
                                }
                            },
                            "params": null,
                            "plan_item_template_slug": null,
                            "asset_types": [
                                "repo",
                                "repo",
                                "repo",
                                "repo"
                            ]
                        },
                        "raw_job_template": {
                            "asset_type": "repo",
                            "default": true,
                            "runner": "github_actions",
                            "if": {
                                "frameworks": [
                                    "terraform"
                                ]
                            },
                            "steps": [
                                {
                                    "name": "Run KICS (terraform)",
                                    "with": {
                                        "args": "scan -t Terraform -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/terraform-config.yaml --disable-secrets",
                                        "output_file": "/code/jit-report/results.json"
                                    },
                                    "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                    "tags": {
                                        "security_tool": "Kics",
                                        "links": {
                                            "security_tool": "https://github.com/Checkmarx/kics",
                                            "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                        }
                                    }
                                }
                            ],
                            "tags": {
                                "languages": [
                                    "terraform"
                                ]
                            }
                        },
                        "depends_on_slugs": [
                            "workflow-enrichment-code"
                        ]
                    },
                    {
                        "plan_item_slug": "item-iac-misconfiguration-detection",
                        "workflow_slug": "workflow-iac-misconfiguration-detection",
                        "workflow_name": "IaC Misconfiguration Detection Workflow",
                        "job_name": "iac-misconfig-detection-serverless",
                        "workflow_template": {
                            "slug": "workflow-iac-misconfiguration-detection",
                            "name": "IaC Misconfiguration Detection Workflow",
                            "type": "workflow",
                            "default": true,
                            "content": "jobs:\n  iac-misconfig-detection-cloudformation:\n    asset_type: repo\n    default: true\n    if:\n      frameworks:\n      - cloudformation\n    runner: github_actions\n    steps:\n    - name: Run KICS (cloudformation)\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control\n          security_tool: https://github.com/Checkmarx/kics\n        security_tool: Kics\n      uses: ghcr.io/jitsecurity-controls/control-kics-alpine:main\n      with:\n        args: scan -t CloudFormation -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config\n          \\/cloudformation-config.yaml --disable-secrets\n        output_file: /code/jit-report/results.json\n    tags:\n      languages:\n      - cloudformation\n      - aws_cdk_output\n  iac-misconfig-detection-pulumi:\n    asset_type: repo\n    default: true\n    if:\n      frameworks:\n      - pulumi\n    runner: github_actions\n    steps:\n    - name: Run KICS (pulumi)\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control\n          security_tool: https://github.com/Checkmarx/kics\n        security_tool: Kics\n      uses: ghcr.io/jitsecurity-controls/control-kics-alpine:main\n      with:\n        args: scan -t Pulumi -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config\n          \\/pulumi-config.yaml --disable-secrets\n        output_file: /code/jit-report/results.json\n    tags:\n      languages:\n      - pulumi\n  iac-misconfig-detection-serverless:\n    asset_type: repo\n    default: true\n    if:\n      frameworks:\n      - serverless\n    runner: github_actions\n    steps:\n    - name: Run KICS (serverless)\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control\n          security_tool: https://github.com/Checkmarx/kics\n        security_tool: Kics\n      uses: ghcr.io/jitsecurity-controls/control-kics-alpine:main\n      with:\n        args: scan -t ServerlessFW -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config\n          \\/serverless-config.yaml --disable-secrets\n        output_file: /code/jit-report/results.json\n    tags:\n      languages:\n      - serverless\n  iac-misconfig-detection-terraform:\n    asset_type: repo\n    default: true\n    if:\n      frameworks:\n      - terraform\n    runner: github_actions\n    steps:\n    - name: Run KICS (terraform)\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control\n          security_tool: https://github.com/Checkmarx/kics\n        security_tool: Kics\n      uses: ghcr.io/jitsecurity-controls/control-kics-alpine:main\n      with:\n        args: scan -t Terraform -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config\n          \\/terraform-config.yaml --disable-secrets\n        output_file: /code/jit-report/results.json\n    tags:\n      languages:\n      - terraform\nname: IaC Misconfiguration Detection Workflow\ntrigger:\n  true:\n  - item_activated\n  - resource_added\n  - pull_request_created\n  - pull_request_updated\n  - merge_default_branch\n  depends_on:\n  - workflow-enrichment-code\n",
                            "depends_on": [
                                "workflow-enrichment-code"
                            ],
                            "parsed_content": {
                                "name": "IaC Misconfiguration Detection Workflow",
                                "jobs": {
                                    "iac-misconfig-detection-pulumi": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "frameworks": [
                                                "pulumi"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run KICS (pulumi)",
                                                "with": {
                                                    "args": "scan -t Pulumi -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/pulumi-config.yaml --disable-secrets",
                                                    "output_file": "/code/jit-report/results.json"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                                "tags": {
                                                    "security_tool": "Kics",
                                                    "links": {
                                                        "security_tool": "https://github.com/Checkmarx/kics",
                                                        "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "pulumi"
                                            ]
                                        }
                                    },
                                    "iac-misconfig-detection-cloudformation": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "frameworks": [
                                                "cloudformation"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run KICS (cloudformation)",
                                                "with": {
                                                    "args": "scan -t CloudFormation -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/cloudformation-config.yaml --disable-secrets",
                                                    "output_file": "/code/jit-report/results.json"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                                "tags": {
                                                    "security_tool": "Kics",
                                                    "links": {
                                                        "security_tool": "https://github.com/Checkmarx/kics",
                                                        "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "cloudformation",
                                                "aws_cdk_output"
                                            ]
                                        }
                                    },
                                    "iac-misconfig-detection-terraform": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "frameworks": [
                                                "terraform"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run KICS (terraform)",
                                                "with": {
                                                    "args": "scan -t Terraform -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/terraform-config.yaml --disable-secrets",
                                                    "output_file": "/code/jit-report/results.json"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                                "tags": {
                                                    "security_tool": "Kics",
                                                    "links": {
                                                        "security_tool": "https://github.com/Checkmarx/kics",
                                                        "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "terraform"
                                            ]
                                        }
                                    },
                                    "iac-misconfig-detection-serverless": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "frameworks": [
                                                "serverless"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run KICS (serverless)",
                                                "with": {
                                                    "args": "scan -t ServerlessFW -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/serverless-config.yaml --disable-secrets",
                                                    "output_file": "/code/jit-report/results.json"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                                "tags": {
                                                    "security_tool": "Kics",
                                                    "links": {
                                                        "security_tool": "https://github.com/Checkmarx/kics",
                                                        "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "serverless"
                                            ]
                                        }
                                    }
                                },
                                "trigger": {
                                    "true": [
                                        "item_activated",
                                        "resource_added",
                                        "pull_request_created",
                                        "pull_request_updated",
                                        "merge_default_branch"
                                    ],
                                    "depends_on": [
                                        "workflow-enrichment-code"
                                    ]
                                }
                            },
                            "params": null,
                            "plan_item_template_slug": null,
                            "asset_types": [
                                "repo",
                                "repo",
                                "repo",
                                "repo"
                            ]
                        },
                        "raw_job_template": {
                            "asset_type": "repo",
                            "default": true,
                            "runner": "github_actions",
                            "if": {
                                "frameworks": [
                                    "serverless"
                                ]
                            },
                            "steps": [
                                {
                                    "name": "Run KICS (serverless)",
                                    "with": {
                                        "args": "scan -t ServerlessFW -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/serverless-config.yaml --disable-secrets",
                                        "output_file": "/code/jit-report/results.json"
                                    },
                                    "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                    "tags": {
                                        "security_tool": "Kics",
                                        "links": {
                                            "security_tool": "https://github.com/Checkmarx/kics",
                                            "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                        }
                                    }
                                }
                            ],
                            "tags": {
                                "languages": [
                                    "serverless"
                                ]
                            }
                        },
                        "depends_on_slugs": [
                            "workflow-enrichment-code"
                        ]
                    },
                    {
                        "plan_item_slug": "item-iac-misconfiguration-detection",
                        "workflow_slug": "workflow-iac-misconfiguration-detection",
                        "workflow_name": "IaC Misconfiguration Detection Workflow",
                        "job_name": "iac-misconfig-detection-cloudformation",
                        "workflow_template": {
                            "slug": "workflow-iac-misconfiguration-detection",
                            "name": "IaC Misconfiguration Detection Workflow",
                            "type": "workflow",
                            "default": true,
                            "content": "jobs:\n  iac-misconfig-detection-cloudformation:\n    asset_type: repo\n    default: true\n    if:\n      frameworks:\n      - cloudformation\n    runner: github_actions\n    steps:\n    - name: Run KICS (cloudformation)\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control\n          security_tool: https://github.com/Checkmarx/kics\n        security_tool: Kics\n      uses: ghcr.io/jitsecurity-controls/control-kics-alpine:main\n      with:\n        args: scan -t CloudFormation -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config\n          \\/cloudformation-config.yaml --disable-secrets\n        output_file: /code/jit-report/results.json\n    tags:\n      languages:\n      - cloudformation\n      - aws_cdk_output\n  iac-misconfig-detection-pulumi:\n    asset_type: repo\n    default: true\n    if:\n      frameworks:\n      - pulumi\n    runner: github_actions\n    steps:\n    - name: Run KICS (pulumi)\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control\n          security_tool: https://github.com/Checkmarx/kics\n        security_tool: Kics\n      uses: ghcr.io/jitsecurity-controls/control-kics-alpine:main\n      with:\n        args: scan -t Pulumi -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config\n          \\/pulumi-config.yaml --disable-secrets\n        output_file: /code/jit-report/results.json\n    tags:\n      languages:\n      - pulumi\n  iac-misconfig-detection-serverless:\n    asset_type: repo\n    default: true\n    if:\n      frameworks:\n      - serverless\n    runner: github_actions\n    steps:\n    - name: Run KICS (serverless)\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control\n          security_tool: https://github.com/Checkmarx/kics\n        security_tool: Kics\n      uses: ghcr.io/jitsecurity-controls/control-kics-alpine:main\n      with:\n        args: scan -t ServerlessFW -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config\n          \\/serverless-config.yaml --disable-secrets\n        output_file: /code/jit-report/results.json\n    tags:\n      languages:\n      - serverless\n  iac-misconfig-detection-terraform:\n    asset_type: repo\n    default: true\n    if:\n      frameworks:\n      - terraform\n    runner: github_actions\n    steps:\n    - name: Run KICS (terraform)\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control\n          security_tool: https://github.com/Checkmarx/kics\n        security_tool: Kics\n      uses: ghcr.io/jitsecurity-controls/control-kics-alpine:main\n      with:\n        args: scan -t Terraform -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config\n          \\/terraform-config.yaml --disable-secrets\n        output_file: /code/jit-report/results.json\n    tags:\n      languages:\n      - terraform\nname: IaC Misconfiguration Detection Workflow\ntrigger:\n  true:\n  - item_activated\n  - resource_added\n  - pull_request_created\n  - pull_request_updated\n  - merge_default_branch\n  depends_on:\n  - workflow-enrichment-code\n",
                            "depends_on": [
                                "workflow-enrichment-code"
                            ],
                            "parsed_content": {
                                "name": "IaC Misconfiguration Detection Workflow",
                                "jobs": {
                                    "iac-misconfig-detection-pulumi": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "frameworks": [
                                                "pulumi"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run KICS (pulumi)",
                                                "with": {
                                                    "args": "scan -t Pulumi -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/pulumi-config.yaml --disable-secrets",
                                                    "output_file": "/code/jit-report/results.json"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                                "tags": {
                                                    "security_tool": "Kics",
                                                    "links": {
                                                        "security_tool": "https://github.com/Checkmarx/kics",
                                                        "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "pulumi"
                                            ]
                                        }
                                    },
                                    "iac-misconfig-detection-cloudformation": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "frameworks": [
                                                "cloudformation"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run KICS (cloudformation)",
                                                "with": {
                                                    "args": "scan -t CloudFormation -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/cloudformation-config.yaml --disable-secrets",
                                                    "output_file": "/code/jit-report/results.json"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                                "tags": {
                                                    "security_tool": "Kics",
                                                    "links": {
                                                        "security_tool": "https://github.com/Checkmarx/kics",
                                                        "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "cloudformation",
                                                "aws_cdk_output"
                                            ]
                                        }
                                    },
                                    "iac-misconfig-detection-terraform": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "frameworks": [
                                                "terraform"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run KICS (terraform)",
                                                "with": {
                                                    "args": "scan -t Terraform -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/terraform-config.yaml --disable-secrets",
                                                    "output_file": "/code/jit-report/results.json"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                                "tags": {
                                                    "security_tool": "Kics",
                                                    "links": {
                                                        "security_tool": "https://github.com/Checkmarx/kics",
                                                        "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "terraform"
                                            ]
                                        }
                                    },
                                    "iac-misconfig-detection-serverless": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "frameworks": [
                                                "serverless"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run KICS (serverless)",
                                                "with": {
                                                    "args": "scan -t ServerlessFW -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/serverless-config.yaml --disable-secrets",
                                                    "output_file": "/code/jit-report/results.json"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                                "tags": {
                                                    "security_tool": "Kics",
                                                    "links": {
                                                        "security_tool": "https://github.com/Checkmarx/kics",
                                                        "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "serverless"
                                            ]
                                        }
                                    }
                                },
                                "trigger": {
                                    "true": [
                                        "item_activated",
                                        "resource_added",
                                        "pull_request_created",
                                        "pull_request_updated",
                                        "merge_default_branch"
                                    ],
                                    "depends_on": [
                                        "workflow-enrichment-code"
                                    ]
                                }
                            },
                            "params": null,
                            "plan_item_template_slug": null,
                            "asset_types": [
                                "repo",
                                "repo",
                                "repo",
                                "repo"
                            ]
                        },
                        "raw_job_template": {
                            "asset_type": "repo",
                            "default": true,
                            "runner": "github_actions",
                            "if": {
                                "frameworks": [
                                    "cloudformation"
                                ]
                            },
                            "steps": [
                                {
                                    "name": "Run KICS (cloudformation)",
                                    "with": {
                                        "args": "scan -t CloudFormation -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/cloudformation-config.yaml --disable-secrets",
                                        "output_file": "/code/jit-report/results.json"
                                    },
                                    "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                    "tags": {
                                        "security_tool": "Kics",
                                        "links": {
                                            "security_tool": "https://github.com/Checkmarx/kics",
                                            "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                        }
                                    }
                                }
                            ],
                            "tags": {
                                "languages": [
                                    "cloudformation",
                                    "aws_cdk_output"
                                ]
                            }
                        },
                        "depends_on_slugs": [
                            "workflow-enrichment-code"
                        ]
                    },
                    {
                        "plan_item_slug": "item-iac-misconfiguration-detection",
                        "workflow_slug": "workflow-iac-misconfiguration-detection",
                        "workflow_name": "IaC Misconfiguration Detection Workflow",
                        "job_name": "iac-misconfig-detection-pulumi",
                        "workflow_template": {
                            "slug": "workflow-iac-misconfiguration-detection",
                            "name": "IaC Misconfiguration Detection Workflow",
                            "type": "workflow",
                            "default": true,
                            "content": "jobs:\n  iac-misconfig-detection-cloudformation:\n    asset_type: repo\n    default: true\n    if:\n      frameworks:\n      - cloudformation\n    runner: github_actions\n    steps:\n    - name: Run KICS (cloudformation)\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control\n          security_tool: https://github.com/Checkmarx/kics\n        security_tool: Kics\n      uses: ghcr.io/jitsecurity-controls/control-kics-alpine:main\n      with:\n        args: scan -t CloudFormation -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config\n          \\/cloudformation-config.yaml --disable-secrets\n        output_file: /code/jit-report/results.json\n    tags:\n      languages:\n      - cloudformation\n      - aws_cdk_output\n  iac-misconfig-detection-pulumi:\n    asset_type: repo\n    default: true\n    if:\n      frameworks:\n      - pulumi\n    runner: github_actions\n    steps:\n    - name: Run KICS (pulumi)\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control\n          security_tool: https://github.com/Checkmarx/kics\n        security_tool: Kics\n      uses: ghcr.io/jitsecurity-controls/control-kics-alpine:main\n      with:\n        args: scan -t Pulumi -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config\n          \\/pulumi-config.yaml --disable-secrets\n        output_file: /code/jit-report/results.json\n    tags:\n      languages:\n      - pulumi\n  iac-misconfig-detection-serverless:\n    asset_type: repo\n    default: true\n    if:\n      frameworks:\n      - serverless\n    runner: github_actions\n    steps:\n    - name: Run KICS (serverless)\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control\n          security_tool: https://github.com/Checkmarx/kics\n        security_tool: Kics\n      uses: ghcr.io/jitsecurity-controls/control-kics-alpine:main\n      with:\n        args: scan -t ServerlessFW -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config\n          \\/serverless-config.yaml --disable-secrets\n        output_file: /code/jit-report/results.json\n    tags:\n      languages:\n      - serverless\n  iac-misconfig-detection-terraform:\n    asset_type: repo\n    default: true\n    if:\n      frameworks:\n      - terraform\n    runner: github_actions\n    steps:\n    - name: Run KICS (terraform)\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control\n          security_tool: https://github.com/Checkmarx/kics\n        security_tool: Kics\n      uses: ghcr.io/jitsecurity-controls/control-kics-alpine:main\n      with:\n        args: scan -t Terraform -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config\n          \\/terraform-config.yaml --disable-secrets\n        output_file: /code/jit-report/results.json\n    tags:\n      languages:\n      - terraform\nname: IaC Misconfiguration Detection Workflow\ntrigger:\n  true:\n  - item_activated\n  - resource_added\n  - pull_request_created\n  - pull_request_updated\n  - merge_default_branch\n  depends_on:\n  - workflow-enrichment-code\n",
                            "depends_on": [
                                "workflow-enrichment-code"
                            ],
                            "parsed_content": {
                                "name": "IaC Misconfiguration Detection Workflow",
                                "jobs": {
                                    "iac-misconfig-detection-pulumi": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "frameworks": [
                                                "pulumi"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run KICS (pulumi)",
                                                "with": {
                                                    "args": "scan -t Pulumi -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/pulumi-config.yaml --disable-secrets",
                                                    "output_file": "/code/jit-report/results.json"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                                "tags": {
                                                    "security_tool": "Kics",
                                                    "links": {
                                                        "security_tool": "https://github.com/Checkmarx/kics",
                                                        "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "pulumi"
                                            ]
                                        }
                                    },
                                    "iac-misconfig-detection-cloudformation": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "frameworks": [
                                                "cloudformation"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run KICS (cloudformation)",
                                                "with": {
                                                    "args": "scan -t CloudFormation -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/cloudformation-config.yaml --disable-secrets",
                                                    "output_file": "/code/jit-report/results.json"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                                "tags": {
                                                    "security_tool": "Kics",
                                                    "links": {
                                                        "security_tool": "https://github.com/Checkmarx/kics",
                                                        "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "cloudformation",
                                                "aws_cdk_output"
                                            ]
                                        }
                                    },
                                    "iac-misconfig-detection-terraform": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "frameworks": [
                                                "terraform"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run KICS (terraform)",
                                                "with": {
                                                    "args": "scan -t Terraform -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/terraform-config.yaml --disable-secrets",
                                                    "output_file": "/code/jit-report/results.json"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                                "tags": {
                                                    "security_tool": "Kics",
                                                    "links": {
                                                        "security_tool": "https://github.com/Checkmarx/kics",
                                                        "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "terraform"
                                            ]
                                        }
                                    },
                                    "iac-misconfig-detection-serverless": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "frameworks": [
                                                "serverless"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run KICS (serverless)",
                                                "with": {
                                                    "args": "scan -t ServerlessFW -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/serverless-config.yaml --disable-secrets",
                                                    "output_file": "/code/jit-report/results.json"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                                "tags": {
                                                    "security_tool": "Kics",
                                                    "links": {
                                                        "security_tool": "https://github.com/Checkmarx/kics",
                                                        "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                                    }
                                                }
                                            }
                                        ],
                                        "tags": {
                                            "languages": [
                                                "serverless"
                                            ]
                                        }
                                    }
                                },
                                "trigger": {
                                    "true": [
                                        "item_activated",
                                        "resource_added",
                                        "pull_request_created",
                                        "pull_request_updated",
                                        "merge_default_branch"
                                    ],
                                    "depends_on": [
                                        "workflow-enrichment-code"
                                    ]
                                }
                            },
                            "params": null,
                            "plan_item_template_slug": null,
                            "asset_types": [
                                "repo",
                                "repo",
                                "repo",
                                "repo"
                            ]
                        },
                        "raw_job_template": {
                            "asset_type": "repo",
                            "default": true,
                            "runner": "github_actions",
                            "if": {
                                "frameworks": [
                                    "pulumi"
                                ]
                            },
                            "steps": [
                                {
                                    "name": "Run KICS (pulumi)",
                                    "with": {
                                        "args": "scan -t Pulumi -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/pulumi-config.yaml --disable-secrets",
                                        "output_file": "/code/jit-report/results.json"
                                    },
                                    "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                    "tags": {
                                        "security_tool": "Kics",
                                        "links": {
                                            "security_tool": "https://github.com/Checkmarx/kics",
                                            "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                        }
                                    }
                                }
                            ],
                            "tags": {
                                "languages": [
                                    "pulumi"
                                ]
                            }
                        },
                        "depends_on_slugs": [
                            "workflow-enrichment-code"
                        ]
                    },
                    {
                        "plan_item_slug": "item-secret-detection",
                        "workflow_slug": "workflow-secret-detection",
                        "workflow_name": "Secret Detection Workflow",
                        "job_name": "secret-detection",
                        "workflow_template": {
                            "slug": "workflow-secret-detection",
                            "name": "Secret Detection Workflow",
                            "type": "workflow",
                            "default": true,
                            "content": "jobs:\n  secret-detection:\n    asset_type: repo\n    default: true\n    if:\n      mime_types:\n      - text\n    runner: github_actions\n    steps:\n    - name: Run Gitleaks\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-secrets-detection-control\n          security_tool: https://github.com/zricethezav/gitleaks\n        security_tool: Gitleaks\n      uses: ghcr.io/jitsecurity-controls/control-gitleaks-alpine:main\n      with:\n        args: detect --config \\$GITLEAKS_CONFIG_FILE_PATH --source \\${WORK_DIR:-.}\n          -v --report-format json --report-path \\$REPORT_FILE --redact --no-git --exit-code\n          0\n        output_file: /tmp/report.json\nname: Secret Detection Workflow\ntrigger:\n  true:\n  - item_activated\n  - resource_added\n  - pull_request_created\n  - pull_request_updated\n  - merge_default_branch\n  depends_on:\n  - workflow-enrichment-code\n",
                            "depends_on": [
                                "workflow-enrichment-code"
                            ],
                            "parsed_content": {
                                "name": "Secret Detection Workflow",
                                "jobs": {
                                    "secret-detection": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "mime_types": [
                                                "text"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run Gitleaks",
                                                "with": {
                                                    "args": "detect --config \\$GITLEAKS_CONFIG_FILE_PATH --source \\${WORK_DIR:-.} -v --report-format json --report-path \\$REPORT_FILE --redact --no-git --exit-code 0",
                                                    "output_file": "/tmp/report.json"
                                                },
                                                "uses": "ghcr.io/jitsecurity-controls/control-gitleaks-alpine:main",
                                                "tags": {
                                                    "security_tool": "Gitleaks",
                                                    "links": {
                                                        "security_tool": "https://github.com/zricethezav/gitleaks",
                                                        "github": "https://github.com/jitsecurity-controls/jit-secrets-detection-control"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                "trigger": {
                                    "true": [
                                        "item_activated",
                                        "resource_added",
                                        "pull_request_created",
                                        "pull_request_updated",
                                        "merge_default_branch"
                                    ],
                                    "depends_on": [
                                        "workflow-enrichment-code"
                                    ]
                                }
                            },
                            "params": null,
                            "plan_item_template_slug": null,
                            "asset_types": [
                                "repo"
                            ]
                        },
                        "raw_job_template": {
                            "asset_type": "repo",
                            "default": true,
                            "runner": "github_actions",
                            "if": {
                                "mime_types": [
                                    "text"
                                ]
                            },
                            "steps": [
                                {
                                    "name": "Run Gitleaks",
                                    "with": {
                                        "args": "detect --config \\$GITLEAKS_CONFIG_FILE_PATH --source \\${WORK_DIR:-.} -v --report-format json --report-path \\$REPORT_FILE --redact --no-git --exit-code 0",
                                        "output_file": "/tmp/report.json"
                                    },
                                    "uses": "ghcr.io/jitsecurity-controls/control-gitleaks-alpine:main",
                                    "tags": {
                                        "security_tool": "Gitleaks",
                                        "links": {
                                            "security_tool": "https://github.com/zricethezav/gitleaks",
                                            "github": "https://github.com/jitsecurity-controls/jit-secrets-detection-control"
                                        }
                                    }
                                }
                            ]
                        },
                        "depends_on_slugs": [
                            "workflow-enrichment-code"
                        ]
                    },
                    {
                        "plan_item_slug": "item-secret-detection",
                        "workflow_slug": "workflow-secret-detection2",
                        "workflow_name": "Secret Detection 2 Workflow",
                        "job_name": "secret-detection2",
                        "workflow_template": {
                            "slug": "workflow-secret-detection2",
                            "name": "Secret Detection 2 Workflow",
                            "type": "workflow",
                            "default": null,
                            "content": "jobs:\n  secret-detection2:\n    asset_type: repo\n    default: true\n    if:\n      mime_types:\n      - text\n    runner: github_actions\n    steps:\n    - default: true\n      name: Run Detect Secrets\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-detect-secrets-control\n          security_tool: https://github.com/Yelp/detect-secrets\n        security_tool: Detect Secrets\n      uses: ghcr.io/jitsecurity-controls/control-detect-secrets-slim:main\n      with:\n        args: scan \\${WORK_DIR:-.}\n        output_file: /tmp/report.json\nname: Secret Detection 2 Workflow\ntrigger:\n  true:\n  - item_activated\n  - resource_added\n  - pull_request_created\n  - pull_request_updated\n  - merge_default_branch\n  depends_on:\n  - workflow-enrichment-code\n",
                            "depends_on": [
                                "workflow-enrichment-code"
                            ],
                            "parsed_content": {
                                "name": "Secret Detection 2 Workflow",
                                "jobs": {
                                    "secret-detection2": {
                                        "asset_type": "repo",
                                        "default": true,
                                        "runner": "github_actions",
                                        "if": {
                                            "mime_types": [
                                                "text"
                                            ]
                                        },
                                        "steps": [
                                            {
                                                "name": "Run Detect Secrets",
                                                "with": {
                                                    "args": "scan \\${WORK_DIR:-.}",
                                                    "output_file": "/tmp/report.json"
                                                },
                                                "default": true,
                                                "uses": "ghcr.io/jitsecurity-controls/control-detect-secrets-slim:main",
                                                "tags": {
                                                    "security_tool": "Detect Secrets",
                                                    "links": {
                                                        "security_tool": "https://github.com/Yelp/detect-secrets",
                                                        "github": "https://github.com/jitsecurity-controls/jit-detect-secrets-control"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                "trigger": {
                                    "true": [
                                        "item_activated",
                                        "resource_added",
                                        "pull_request_created",
                                        "pull_request_updated",
                                        "merge_default_branch"
                                    ],
                                    "depends_on": [
                                        "workflow-enrichment-code"
                                    ]
                                }
                            },
                            "params": null,
                            "plan_item_template_slug": null,
                            "asset_types": [
                                "repo"
                            ]
                        },
                        "raw_job_template": {
                            "asset_type": "repo",
                            "default": true,
                            "runner": "github_actions",
                            "if": {
                                "mime_types": [
                                    "text"
                                ]
                            },
                            "steps": [
                                {
                                    "name": "Run Detect Secrets",
                                    "with": {
                                        "args": "scan \\${WORK_DIR:-.}",
                                        "output_file": "/tmp/report.json"
                                    },
                                    "default": true,
                                    "uses": "ghcr.io/jitsecurity-controls/control-detect-secrets-slim:main",
                                    "tags": {
                                        "security_tool": "Detect Secrets",
                                        "links": {
                                            "security_tool": "https://github.com/Yelp/detect-secrets",
                                            "github": "https://github.com/jitsecurity-controls/jit-detect-secrets-control"
                                        }
                                    }
                                }
                            ]
                        },
                        "depends_on_slugs": [
                            "workflow-enrichment-code"
                        ]
                    }
                ],
                "should_enrich": true,
                "depends_on_workflows_templates": [
                    {
                        "slug": "workflow-enrichment-code",
                        "name": "Code Enrichment Workflow",
                        "depends_on": [],
                        "parsed_content": {
                            "name": "Code Enrichment Workflow",
                            "jobs": {
                                "enrich": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "steps": [
                                        {
                                            "name": "Run code enrichment",
                                            "with": {
                                                "args": "--path \\${WORK_DIR:-.}"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-enrichment-slim:main"
                                        }
                                    ]
                                }
                            }
                        },
                        "params": null,
                        "plan_item_template_slug": null,
                        "asset_types": [
                            "repo"
                        ]
                    }
                ],
                "enriched_data": {},
                "Epsagon": {
                    "id": "e9a660c2-4f6e-4468-8ce6-55b7d9cba741",
                    "step_num": -1
                }
            },
            "StartTime": "2023-03-14T18:24:08.317Z",
            "Name": "resource_added-8b2246b2-19ba-4645-aed3-92fdf88483a2-1678818248.155036",
            "RoleArn": "arn:aws:iam::121169888995:role/ProcessStateMachine"
        },
        "StateMachine": {
            "Id": "arn:aws:states:us-east-1:121169888995:stateMachine:bandit-handle-enrichment-process",
            "Name": "bandit-handle-enrichment-process"
        },
        "State": {
            "Name": "Prepare For Execution",
            "EnteredTime": "2023-03-14T18:25:06.819Z",
            "RetryCount": 0
        }
    },
    "step_input": {
        "prepare_for_execution_event": {
            "jit_event": {
                "tenant_id": "46db21b6-fb2a-4c5d-9148-37d2248a7c20",
                "jit_event_name": "resource_added",
                "jit_event_id": "8b2246b2-19ba-4645-aed3-92fdf88483a2",
                "asset_id": null,
                "workflows": null,
                "created_asset_ids": [
                    "57b6f168-8f2a-4b99-848f-f9c439ddac44"
                ]
            },
            "trigger_filter_attributes": {
                "plan_slugs": [],
                "plan_item_slugs": [],
                "workflow_slugs": [],
                "job_names": [],
                "asset_ids": [
                    "57b6f168-8f2a-4b99-848f-f9c439ddac44"
                ],
                "asset_envs": [],
                "triggers": [
                    "resource_added"
                ],
                "create_trigger_event_from_jit_event": false
            },
            "asset": {
                "aws_account_id": null,
                "aws_stack_arn": null,
                "aws_jit_role_name": null,
                "aws_regions_to_scan": null,
                "aws_jit_role_external_id": null,
                "target_url": null,
                "exclude_paths": null,
                "authentication_mode": null,
                "auth_header_name": null,
                "auth_header_value": null,
                "login_page_url": null,
                "username": null,
                "username_css_selector": null,
                "password": null,
                "password_css_selector": null,
                "api_domain": null,
                "external_id": "614020004",
                "asset_id": "57b6f168-8f2a-4b99-848f-f9c439ddac44",
                "tenant_id": "46db21b6-fb2a-4c5d-9148-37d2248a7c20",
                "asset_type": "repo",
                "vendor": "github",
                "owner": "shlomi-test-org",
                "asset_name": "moshiko",
                "risk_status": null,
                "risk_score": 0,
                "is_active": true,
                "is_covered": true,
                "created_at": "2023-03-14T18:23:53.924735",
                "modified_at": "2023-03-14T18:23:53.924735",
                "environment": null,
                "is_branch_protected_by_jit": false,
                "status": null,
                "status_details": null
            },
            "installations": [
                {
                    "tenant_id": "46db21b6-fb2a-4c5d-9148-37d2248a7c20",
                    "app_id": "161076",
                    "owner": "shlomi-test-org",
                    "installation_id": "33985869",
                    "is_active": true,
                    "creator": "shlomi-test-org",
                    "vendor": "github",
                    "name": "shlomi-test-org",
                    "created_at": "2023-02-08T12:34:37.864980",
                    "modified_at": "2023-02-08T12:34:37.864980",
                    "status": "connected",
                    "status_details": null,
                    "installation_type": null,
                    "vendor_response": {
                        "canPreviewItem": true,
                        "repository_selection": "selected"
                    },
                    "external_id": null,
                    "aws_regions_to_monitor": null,
                    "centralized_repo_asset_id": "1a19b50a-20ef-4e33-afa1-8d9ac96ca36e",
                    "centralized_repo_asset": {
                        "aws_account_id": null,
                        "aws_stack_arn": null,
                        "aws_jit_role_name": null,
                        "aws_regions_to_scan": null,
                        "target_url": null,
                        "exclude_paths": null,
                        "authentication_mode": null,
                        "auth_header_name": null,
                        "auth_header_value": null,
                        "login_page_url": null,
                        "username": null,
                        "username_css_selector": null,
                        "password": null,
                        "password_css_selector": null,
                        "api_domain": null,
                        "external_id": "568439579",
                        "asset_id": "1a19b50a-20ef-4e33-afa1-8d9ac96ca36e",
                        "tenant_id": "46db21b6-fb2a-4c5d-9148-37d2248a7c20",
                        "asset_type": "repo",
                        "vendor": "github",
                        "owner": "shlomi-test-org",
                        "asset_name": ".jit",
                        "risk_status": null,
                        "risk_score": 0,
                        "is_active": true,
                        "is_covered": true,
                        "created_at": "2022-11-20T14:41:49.229143",
                        "modified_at": "2023-02-08T12:34:42.325014",
                        "environment": null,
                        "is_branch_protected_by_jit": false,
                        "status": null,
                        "status_details": null
                    }
                },
                {
                    "tenant_id": "46db21b6-fb2a-4c5d-9148-37d2248a7c20",
                    "app_id": "jit-aws",
                    "owner": "748560276420",
                    "installation_id": "748560276420",
                    "is_active": true,
                    "creator": "748560276420",
                    "vendor": "aws",
                    "name": "748560276420",
                    "created_at": "2023-02-21T15:42:00.133464",
                    "modified_at": "2023-02-21T15:42:00.133464",
                    "status": "connected",
                    "status_details": null,
                    "installation_type": "aws_account",
                    "vendor_response": null,
                    "external_id": "rmcCp1TbXILI2N2VH7E2G3DSo73iqD0DEFMAL9zw53c",
                    "aws_regions_to_monitor": [
                        "us-east-1"
                    ],
                    "centralized_repo_asset_id": null,
                    "centralized_repo_asset": null
                }
            ],
            "filtered_jobs": [
                {
                    "plan_item_slug": "item-branch-protection-scm",
                    "workflow_slug": "workflow-branch-protection-github-checker",
                    "workflow_name": "Branch Protection Checker on Github Workflow",
                    "job_name": "branch-protection-github-checker",
                    "workflow_template": {
                        "slug": "workflow-branch-protection-github-checker",
                        "name": "Branch Protection Checker on Github Workflow",
                        "type": "workflow",
                        "default": true,
                        "content": "jobs:\n  branch-protection-github-checker:\n    asset_type: repo\n    default: true\n    runner: jit\n    steps:\n    - name: Run Branch Protection checker\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-github-branch-protection-control\n        security_tool: Branch Protection Checker\n      uses: ghcr.io/jitsecurity-controls/control-branch-protection-github-alpine:latest\nname: Branch Protection Checker on Github Workflow\ntrigger:\n  true:\n  - item_activated\n  - resource_added\n  - schedule('daily')\n",
                        "depends_on": [],
                        "parsed_content": {
                            "name": "Branch Protection Checker on Github Workflow",
                            "jobs": {
                                "branch-protection-github-checker": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "jit",
                                    "steps": [
                                        {
                                            "name": "Run Branch Protection checker",
                                            "uses": "ghcr.io/jitsecurity-controls/control-branch-protection-github-alpine:latest",
                                            "tags": {
                                                "security_tool": "Branch Protection Checker",
                                                "links": {
                                                    "github": "https://github.com/jitsecurity-controls/jit-github-branch-protection-control"
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            "trigger": {
                                "true": [
                                    "item_activated",
                                    "resource_added",
                                    "schedule('daily')"
                                ]
                            }
                        },
                        "params": null,
                        "plan_item_template_slug": null,
                        "asset_types": [
                            "repo"
                        ]
                    },
                    "raw_job_template": {
                        "asset_type": "repo",
                        "default": true,
                        "runner": "jit",
                        "steps": [
                            {
                                "name": "Run Branch Protection checker",
                                "uses": "ghcr.io/jitsecurity-controls/control-branch-protection-github-alpine:latest",
                                "tags": {
                                    "security_tool": "Branch Protection Checker",
                                    "links": {
                                        "github": "https://github.com/jitsecurity-controls/jit-github-branch-protection-control"
                                    }
                                }
                            }
                        ]
                    },
                    "depends_on_slugs": []
                },
                {
                    "plan_item_slug": "item-code-vulnerability",
                    "workflow_slug": "workflow-sast",
                    "workflow_name": "SAST Workflow",
                    "job_name": "static-code-analysis-go",
                    "workflow_template": {
                        "slug": "workflow-sast",
                        "name": "SAST Workflow",
                        "type": "workflow",
                        "default": true,
                        "content": "jobs:\n  static-code-analysis-go:\n    asset_type: repo\n    default: true\n    if:\n      languages:\n      - go\n    runner: github_actions\n    steps:\n    - name: Run Go\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-golang-code-scanning-control\n          security_tool: https://github.com/securego/gosec\n        security_tool: Gosec\n      uses: ghcr.io/jitsecurity-controls/control-gosec-alpine:main\n      with:\n        args: -fmt=json -severity=high \\${WORK_DIR:-.}/...\n    tags:\n      languages:\n      - go\n  static-code-analysis-java:\n    asset_type: repo\n    if:\n      languages:\n      - java\n    runner: github_actions\n    steps:\n    - name: Run semgrep java\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control\n          security_tool: https://github.com/returntocorp/semgrep\n        security_tool: Semgrep\n      uses: ghcr.io/jitsecurity-controls/control-semgrep-alpine:main\n      with:\n        args: --json --config=/semgrep-java-config.yml --metrics=off --severity=ERROR\n          \\${WORK_DIR:-.}\n    tags:\n      languages:\n      - java\n  static-code-analysis-js:\n    asset_type: repo\n    default: true\n    if:\n      languages:\n      - javascript\n      - typescript\n    runner: github_actions\n    steps:\n    - name: Run semgrep javascript and typescript\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control\n          security_tool: https://github.com/returntocorp/semgrep\n        security_tool: Semgrep\n      uses: ghcr.io/jitsecurity-controls/control-semgrep-alpine:main\n      with:\n        args: --json --config=/semgrep-ts-config.yml --metrics=off --severity=ERROR\n          \\${WORK_DIR:-.}\n    tags:\n      languages:\n      - javascript\n      - typescript\n      - JS\n      - TS\n  static-code-analysis-python:\n    asset_type: repo\n    default: true\n    if:\n      languages:\n      - python\n    runner: github_actions\n    steps:\n    - name: Run Bandit\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-python-code-scanning-control\n          security_tool: https://github.com/PyCQA/bandit\n        security_tool: Bandit\n      uses: ghcr.io/jitsecurity-controls/control-bandit-slim:main\n      with:\n        args: -r \\${WORK_DIR:-.} -f json -q -lll -iii\n    tags:\n      languages:\n      - python\n  static-code-analysis-scala:\n    asset_type: repo\n    if:\n      languages:\n      - scala\n    runner: github_actions\n    steps:\n    - name: Run semgrep scala\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control\n          security_tool: https://github.com/returntocorp/semgrep\n        security_tool: Semgrep\n      uses: ghcr.io/jitsecurity-controls/control-semgrep-alpine:main\n      with:\n        args: --json --config=/semgrep-scala-config.yml --metrics=off --severity=ERROR\n          \\${WORK_DIR:-.}\n    tags:\n      languages:\n      - scala\nname: SAST Workflow\ntrigger:\n  true:\n  - item_activated\n  - resource_added\n  - pull_request_created\n  - pull_request_updated\n  - merge_default_branch\n  depends_on:\n  - workflow-enrichment-code\n",
                        "depends_on": [
                            "workflow-enrichment-code"
                        ],
                        "parsed_content": {
                            "name": "SAST Workflow",
                            "jobs": {
                                "static-code-analysis-scala": {
                                    "asset_type": "repo",
                                    "runner": "github_actions",
                                    "if": {
                                        "languages": [
                                            "scala"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run semgrep scala",
                                            "with": {
                                                "args": "--json --config=/semgrep-scala-config.yml --metrics=off --severity=ERROR \\${WORK_DIR:-.}"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-semgrep-alpine:main",
                                            "tags": {
                                                "security_tool": "Semgrep",
                                                "links": {
                                                    "security_tool": "https://github.com/returntocorp/semgrep",
                                                    "github": "https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "scala"
                                        ]
                                    }
                                },
                                "static-code-analysis-go": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "languages": [
                                            "go"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run Go",
                                            "with": {
                                                "args": "-fmt=json -severity=high \\${WORK_DIR:-.}/..."
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-gosec-alpine:main",
                                            "tags": {
                                                "security_tool": "Gosec",
                                                "links": {
                                                    "security_tool": "https://github.com/securego/gosec",
                                                    "github": "https://github.com/jitsecurity-controls/jit-golang-code-scanning-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "go"
                                        ]
                                    }
                                },
                                "static-code-analysis-python": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "languages": [
                                            "python"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run Bandit",
                                            "with": {
                                                "args": "-r \\${WORK_DIR:-.} -f json -q -lll -iii"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-bandit-slim:main",
                                            "tags": {
                                                "security_tool": "Bandit",
                                                "links": {
                                                    "security_tool": "https://github.com/PyCQA/bandit",
                                                    "github": "https://github.com/jitsecurity-controls/jit-python-code-scanning-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "python"
                                        ]
                                    }
                                },
                                "static-code-analysis-java": {
                                    "asset_type": "repo",
                                    "runner": "github_actions",
                                    "if": {
                                        "languages": [
                                            "java"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run semgrep java",
                                            "with": {
                                                "args": "--json --config=/semgrep-java-config.yml --metrics=off --severity=ERROR \\${WORK_DIR:-.}"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-semgrep-alpine:main",
                                            "tags": {
                                                "security_tool": "Semgrep",
                                                "links": {
                                                    "security_tool": "https://github.com/returntocorp/semgrep",
                                                    "github": "https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "java"
                                        ]
                                    }
                                },
                                "static-code-analysis-js": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "languages": [
                                            "javascript",
                                            "typescript"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run semgrep javascript and typescript",
                                            "with": {
                                                "args": "--json --config=/semgrep-ts-config.yml --metrics=off --severity=ERROR \\${WORK_DIR:-.}"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-semgrep-alpine:main",
                                            "tags": {
                                                "security_tool": "Semgrep",
                                                "links": {
                                                    "security_tool": "https://github.com/returntocorp/semgrep",
                                                    "github": "https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "javascript",
                                            "typescript",
                                            "JS",
                                            "TS"
                                        ]
                                    }
                                }
                            },
                            "trigger": {
                                "true": [
                                    "item_activated",
                                    "resource_added",
                                    "pull_request_created",
                                    "pull_request_updated",
                                    "merge_default_branch"
                                ],
                                "depends_on": [
                                    "workflow-enrichment-code"
                                ]
                            }
                        },
                        "params": null,
                        "plan_item_template_slug": null,
                        "asset_types": [
                            "repo",
                            "repo",
                            "repo",
                            "repo",
                            "repo",
                            "repo"
                        ]
                    },
                    "raw_job_template": {
                        "asset_type": "repo",
                        "default": true,
                        "runner": "github_actions",
                        "if": {
                            "languages": [
                                "go"
                            ]
                        },
                        "steps": [
                            {
                                "name": "Run Go",
                                "with": {
                                    "args": "-fmt=json -severity=high \\${WORK_DIR:-.}/..."
                                },
                                "uses": "ghcr.io/jitsecurity-controls/control-gosec-alpine:main",
                                "tags": {
                                    "security_tool": "Gosec",
                                    "links": {
                                        "security_tool": "https://github.com/securego/gosec",
                                        "github": "https://github.com/jitsecurity-controls/jit-golang-code-scanning-control"
                                    }
                                }
                            }
                        ],
                        "tags": {
                            "languages": [
                                "go"
                            ]
                        }
                    },
                    "depends_on_slugs": [
                        "workflow-enrichment-code"
                    ]
                },
                {
                    "plan_item_slug": "item-code-vulnerability",
                    "workflow_slug": "workflow-sast",
                    "workflow_name": "SAST Workflow",
                    "job_name": "static-code-analysis-js",
                    "workflow_template": {
                        "slug": "workflow-sast",
                        "name": "SAST Workflow",
                        "type": "workflow",
                        "default": true,
                        "content": "jobs:\n  static-code-analysis-go:\n    asset_type: repo\n    default: true\n    if:\n      languages:\n      - go\n    runner: github_actions\n    steps:\n    - name: Run Go\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-golang-code-scanning-control\n          security_tool: https://github.com/securego/gosec\n        security_tool: Gosec\n      uses: ghcr.io/jitsecurity-controls/control-gosec-alpine:main\n      with:\n        args: -fmt=json -severity=high \\${WORK_DIR:-.}/...\n    tags:\n      languages:\n      - go\n  static-code-analysis-java:\n    asset_type: repo\n    if:\n      languages:\n      - java\n    runner: github_actions\n    steps:\n    - name: Run semgrep java\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control\n          security_tool: https://github.com/returntocorp/semgrep\n        security_tool: Semgrep\n      uses: ghcr.io/jitsecurity-controls/control-semgrep-alpine:main\n      with:\n        args: --json --config=/semgrep-java-config.yml --metrics=off --severity=ERROR\n          \\${WORK_DIR:-.}\n    tags:\n      languages:\n      - java\n  static-code-analysis-js:\n    asset_type: repo\n    default: true\n    if:\n      languages:\n      - javascript\n      - typescript\n    runner: github_actions\n    steps:\n    - name: Run semgrep javascript and typescript\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control\n          security_tool: https://github.com/returntocorp/semgrep\n        security_tool: Semgrep\n      uses: ghcr.io/jitsecurity-controls/control-semgrep-alpine:main\n      with:\n        args: --json --config=/semgrep-ts-config.yml --metrics=off --severity=ERROR\n          \\${WORK_DIR:-.}\n    tags:\n      languages:\n      - javascript\n      - typescript\n      - JS\n      - TS\n  static-code-analysis-python:\n    asset_type: repo\n    default: true\n    if:\n      languages:\n      - python\n    runner: github_actions\n    steps:\n    - name: Run Bandit\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-python-code-scanning-control\n          security_tool: https://github.com/PyCQA/bandit\n        security_tool: Bandit\n      uses: ghcr.io/jitsecurity-controls/control-bandit-slim:main\n      with:\n        args: -r \\${WORK_DIR:-.} -f json -q -lll -iii\n    tags:\n      languages:\n      - python\n  static-code-analysis-scala:\n    asset_type: repo\n    if:\n      languages:\n      - scala\n    runner: github_actions\n    steps:\n    - name: Run semgrep scala\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control\n          security_tool: https://github.com/returntocorp/semgrep\n        security_tool: Semgrep\n      uses: ghcr.io/jitsecurity-controls/control-semgrep-alpine:main\n      with:\n        args: --json --config=/semgrep-scala-config.yml --metrics=off --severity=ERROR\n          \\${WORK_DIR:-.}\n    tags:\n      languages:\n      - scala\nname: SAST Workflow\ntrigger:\n  true:\n  - item_activated\n  - resource_added\n  - pull_request_created\n  - pull_request_updated\n  - merge_default_branch\n  depends_on:\n  - workflow-enrichment-code\n",
                        "depends_on": [
                            "workflow-enrichment-code"
                        ],
                        "parsed_content": {
                            "name": "SAST Workflow",
                            "jobs": {
                                "static-code-analysis-scala": {
                                    "asset_type": "repo",
                                    "runner": "github_actions",
                                    "if": {
                                        "languages": [
                                            "scala"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run semgrep scala",
                                            "with": {
                                                "args": "--json --config=/semgrep-scala-config.yml --metrics=off --severity=ERROR \\${WORK_DIR:-.}"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-semgrep-alpine:main",
                                            "tags": {
                                                "security_tool": "Semgrep",
                                                "links": {
                                                    "security_tool": "https://github.com/returntocorp/semgrep",
                                                    "github": "https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "scala"
                                        ]
                                    }
                                },
                                "static-code-analysis-go": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "languages": [
                                            "go"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run Go",
                                            "with": {
                                                "args": "-fmt=json -severity=high \\${WORK_DIR:-.}/..."
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-gosec-alpine:main",
                                            "tags": {
                                                "security_tool": "Gosec",
                                                "links": {
                                                    "security_tool": "https://github.com/securego/gosec",
                                                    "github": "https://github.com/jitsecurity-controls/jit-golang-code-scanning-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "go"
                                        ]
                                    }
                                },
                                "static-code-analysis-python": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "languages": [
                                            "python"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run Bandit",
                                            "with": {
                                                "args": "-r \\${WORK_DIR:-.} -f json -q -lll -iii"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-bandit-slim:main",
                                            "tags": {
                                                "security_tool": "Bandit",
                                                "links": {
                                                    "security_tool": "https://github.com/PyCQA/bandit",
                                                    "github": "https://github.com/jitsecurity-controls/jit-python-code-scanning-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "python"
                                        ]
                                    }
                                },
                                "static-code-analysis-java": {
                                    "asset_type": "repo",
                                    "runner": "github_actions",
                                    "if": {
                                        "languages": [
                                            "java"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run semgrep java",
                                            "with": {
                                                "args": "--json --config=/semgrep-java-config.yml --metrics=off --severity=ERROR \\${WORK_DIR:-.}"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-semgrep-alpine:main",
                                            "tags": {
                                                "security_tool": "Semgrep",
                                                "links": {
                                                    "security_tool": "https://github.com/returntocorp/semgrep",
                                                    "github": "https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "java"
                                        ]
                                    }
                                },
                                "static-code-analysis-js": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "languages": [
                                            "javascript",
                                            "typescript"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run semgrep javascript and typescript",
                                            "with": {
                                                "args": "--json --config=/semgrep-ts-config.yml --metrics=off --severity=ERROR \\${WORK_DIR:-.}"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-semgrep-alpine:main",
                                            "tags": {
                                                "security_tool": "Semgrep",
                                                "links": {
                                                    "security_tool": "https://github.com/returntocorp/semgrep",
                                                    "github": "https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "javascript",
                                            "typescript",
                                            "JS",
                                            "TS"
                                        ]
                                    }
                                }
                            },
                            "trigger": {
                                "true": [
                                    "item_activated",
                                    "resource_added",
                                    "pull_request_created",
                                    "pull_request_updated",
                                    "merge_default_branch"
                                ],
                                "depends_on": [
                                    "workflow-enrichment-code"
                                ]
                            }
                        },
                        "params": null,
                        "plan_item_template_slug": null,
                        "asset_types": [
                            "repo",
                            "repo",
                            "repo",
                            "repo",
                            "repo",
                            "repo"
                        ]
                    },
                    "raw_job_template": {
                        "asset_type": "repo",
                        "default": true,
                        "runner": "github_actions",
                        "if": {
                            "languages": [
                                "javascript",
                                "typescript"
                            ]
                        },
                        "steps": [
                            {
                                "name": "Run semgrep javascript and typescript",
                                "with": {
                                    "args": "--json --config=/semgrep-ts-config.yml --metrics=off --severity=ERROR \\${WORK_DIR:-.}"
                                },
                                "uses": "ghcr.io/jitsecurity-controls/control-semgrep-alpine:main",
                                "tags": {
                                    "security_tool": "Semgrep",
                                    "links": {
                                        "security_tool": "https://github.com/returntocorp/semgrep",
                                        "github": "https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control"
                                    }
                                }
                            }
                        ],
                        "tags": {
                            "languages": [
                                "javascript",
                                "typescript",
                                "JS",
                                "TS"
                            ]
                        }
                    },
                    "depends_on_slugs": [
                        "workflow-enrichment-code"
                    ]
                },
                {
                    "plan_item_slug": "item-code-vulnerability",
                    "workflow_slug": "workflow-sast",
                    "workflow_name": "SAST Workflow",
                    "job_name": "static-code-analysis-scala",
                    "workflow_template": {
                        "slug": "workflow-sast",
                        "name": "SAST Workflow",
                        "type": "workflow",
                        "default": true,
                        "content": "jobs:\n  static-code-analysis-go:\n    asset_type: repo\n    default: true\n    if:\n      languages:\n      - go\n    runner: github_actions\n    steps:\n    - name: Run Go\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-golang-code-scanning-control\n          security_tool: https://github.com/securego/gosec\n        security_tool: Gosec\n      uses: ghcr.io/jitsecurity-controls/control-gosec-alpine:main\n      with:\n        args: -fmt=json -severity=high \\${WORK_DIR:-.}/...\n    tags:\n      languages:\n      - go\n  static-code-analysis-java:\n    asset_type: repo\n    if:\n      languages:\n      - java\n    runner: github_actions\n    steps:\n    - name: Run semgrep java\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control\n          security_tool: https://github.com/returntocorp/semgrep\n        security_tool: Semgrep\n      uses: ghcr.io/jitsecurity-controls/control-semgrep-alpine:main\n      with:\n        args: --json --config=/semgrep-java-config.yml --metrics=off --severity=ERROR\n          \\${WORK_DIR:-.}\n    tags:\n      languages:\n      - java\n  static-code-analysis-js:\n    asset_type: repo\n    default: true\n    if:\n      languages:\n      - javascript\n      - typescript\n    runner: github_actions\n    steps:\n    - name: Run semgrep javascript and typescript\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control\n          security_tool: https://github.com/returntocorp/semgrep\n        security_tool: Semgrep\n      uses: ghcr.io/jitsecurity-controls/control-semgrep-alpine:main\n      with:\n        args: --json --config=/semgrep-ts-config.yml --metrics=off --severity=ERROR\n          \\${WORK_DIR:-.}\n    tags:\n      languages:\n      - javascript\n      - typescript\n      - JS\n      - TS\n  static-code-analysis-python:\n    asset_type: repo\n    default: true\n    if:\n      languages:\n      - python\n    runner: github_actions\n    steps:\n    - name: Run Bandit\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-python-code-scanning-control\n          security_tool: https://github.com/PyCQA/bandit\n        security_tool: Bandit\n      uses: ghcr.io/jitsecurity-controls/control-bandit-slim:main\n      with:\n        args: -r \\${WORK_DIR:-.} -f json -q -lll -iii\n    tags:\n      languages:\n      - python\n  static-code-analysis-scala:\n    asset_type: repo\n    if:\n      languages:\n      - scala\n    runner: github_actions\n    steps:\n    - name: Run semgrep scala\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control\n          security_tool: https://github.com/returntocorp/semgrep\n        security_tool: Semgrep\n      uses: ghcr.io/jitsecurity-controls/control-semgrep-alpine:main\n      with:\n        args: --json --config=/semgrep-scala-config.yml --metrics=off --severity=ERROR\n          \\${WORK_DIR:-.}\n    tags:\n      languages:\n      - scala\nname: SAST Workflow\ntrigger:\n  true:\n  - item_activated\n  - resource_added\n  - pull_request_created\n  - pull_request_updated\n  - merge_default_branch\n  depends_on:\n  - workflow-enrichment-code\n",
                        "depends_on": [
                            "workflow-enrichment-code"
                        ],
                        "parsed_content": {
                            "name": "SAST Workflow",
                            "jobs": {
                                "static-code-analysis-scala": {
                                    "asset_type": "repo",
                                    "runner": "github_actions",
                                    "if": {
                                        "languages": [
                                            "scala"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run semgrep scala",
                                            "with": {
                                                "args": "--json --config=/semgrep-scala-config.yml --metrics=off --severity=ERROR \\${WORK_DIR:-.}"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-semgrep-alpine:main",
                                            "tags": {
                                                "security_tool": "Semgrep",
                                                "links": {
                                                    "security_tool": "https://github.com/returntocorp/semgrep",
                                                    "github": "https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "scala"
                                        ]
                                    }
                                },
                                "static-code-analysis-go": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "languages": [
                                            "go"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run Go",
                                            "with": {
                                                "args": "-fmt=json -severity=high \\${WORK_DIR:-.}/..."
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-gosec-alpine:main",
                                            "tags": {
                                                "security_tool": "Gosec",
                                                "links": {
                                                    "security_tool": "https://github.com/securego/gosec",
                                                    "github": "https://github.com/jitsecurity-controls/jit-golang-code-scanning-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "go"
                                        ]
                                    }
                                },
                                "static-code-analysis-python": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "languages": [
                                            "python"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run Bandit",
                                            "with": {
                                                "args": "-r \\${WORK_DIR:-.} -f json -q -lll -iii"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-bandit-slim:main",
                                            "tags": {
                                                "security_tool": "Bandit",
                                                "links": {
                                                    "security_tool": "https://github.com/PyCQA/bandit",
                                                    "github": "https://github.com/jitsecurity-controls/jit-python-code-scanning-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "python"
                                        ]
                                    }
                                },
                                "static-code-analysis-java": {
                                    "asset_type": "repo",
                                    "runner": "github_actions",
                                    "if": {
                                        "languages": [
                                            "java"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run semgrep java",
                                            "with": {
                                                "args": "--json --config=/semgrep-java-config.yml --metrics=off --severity=ERROR \\${WORK_DIR:-.}"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-semgrep-alpine:main",
                                            "tags": {
                                                "security_tool": "Semgrep",
                                                "links": {
                                                    "security_tool": "https://github.com/returntocorp/semgrep",
                                                    "github": "https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "java"
                                        ]
                                    }
                                },
                                "static-code-analysis-js": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "languages": [
                                            "javascript",
                                            "typescript"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run semgrep javascript and typescript",
                                            "with": {
                                                "args": "--json --config=/semgrep-ts-config.yml --metrics=off --severity=ERROR \\${WORK_DIR:-.}"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-semgrep-alpine:main",
                                            "tags": {
                                                "security_tool": "Semgrep",
                                                "links": {
                                                    "security_tool": "https://github.com/returntocorp/semgrep",
                                                    "github": "https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "javascript",
                                            "typescript",
                                            "JS",
                                            "TS"
                                        ]
                                    }
                                }
                            },
                            "trigger": {
                                "true": [
                                    "item_activated",
                                    "resource_added",
                                    "pull_request_created",
                                    "pull_request_updated",
                                    "merge_default_branch"
                                ],
                                "depends_on": [
                                    "workflow-enrichment-code"
                                ]
                            }
                        },
                        "params": null,
                        "plan_item_template_slug": null,
                        "asset_types": [
                            "repo",
                            "repo",
                            "repo",
                            "repo",
                            "repo",
                            "repo"
                        ]
                    },
                    "raw_job_template": {
                        "asset_type": "repo",
                        "runner": "github_actions",
                        "if": {
                            "languages": [
                                "scala"
                            ]
                        },
                        "steps": [
                            {
                                "name": "Run semgrep scala",
                                "with": {
                                    "args": "--json --config=/semgrep-scala-config.yml --metrics=off --severity=ERROR \\${WORK_DIR:-.}"
                                },
                                "uses": "ghcr.io/jitsecurity-controls/control-semgrep-alpine:main",
                                "tags": {
                                    "security_tool": "Semgrep",
                                    "links": {
                                        "security_tool": "https://github.com/returntocorp/semgrep",
                                        "github": "https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control"
                                    }
                                }
                            }
                        ],
                        "tags": {
                            "languages": [
                                "scala"
                            ]
                        }
                    },
                    "depends_on_slugs": [
                        "workflow-enrichment-code"
                    ]
                },
                {
                    "plan_item_slug": "item-code-vulnerability",
                    "workflow_slug": "workflow-sast",
                    "workflow_name": "SAST Workflow",
                    "job_name": "static-code-analysis-java",
                    "workflow_template": {
                        "slug": "workflow-sast",
                        "name": "SAST Workflow",
                        "type": "workflow",
                        "default": true,
                        "content": "jobs:\n  static-code-analysis-go:\n    asset_type: repo\n    default: true\n    if:\n      languages:\n      - go\n    runner: github_actions\n    steps:\n    - name: Run Go\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-golang-code-scanning-control\n          security_tool: https://github.com/securego/gosec\n        security_tool: Gosec\n      uses: ghcr.io/jitsecurity-controls/control-gosec-alpine:main\n      with:\n        args: -fmt=json -severity=high \\${WORK_DIR:-.}/...\n    tags:\n      languages:\n      - go\n  static-code-analysis-java:\n    asset_type: repo\n    if:\n      languages:\n      - java\n    runner: github_actions\n    steps:\n    - name: Run semgrep java\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control\n          security_tool: https://github.com/returntocorp/semgrep\n        security_tool: Semgrep\n      uses: ghcr.io/jitsecurity-controls/control-semgrep-alpine:main\n      with:\n        args: --json --config=/semgrep-java-config.yml --metrics=off --severity=ERROR\n          \\${WORK_DIR:-.}\n    tags:\n      languages:\n      - java\n  static-code-analysis-js:\n    asset_type: repo\n    default: true\n    if:\n      languages:\n      - javascript\n      - typescript\n    runner: github_actions\n    steps:\n    - name: Run semgrep javascript and typescript\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control\n          security_tool: https://github.com/returntocorp/semgrep\n        security_tool: Semgrep\n      uses: ghcr.io/jitsecurity-controls/control-semgrep-alpine:main\n      with:\n        args: --json --config=/semgrep-ts-config.yml --metrics=off --severity=ERROR\n          \\${WORK_DIR:-.}\n    tags:\n      languages:\n      - javascript\n      - typescript\n      - JS\n      - TS\n  static-code-analysis-python:\n    asset_type: repo\n    default: true\n    if:\n      languages:\n      - python\n    runner: github_actions\n    steps:\n    - name: Run Bandit\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-python-code-scanning-control\n          security_tool: https://github.com/PyCQA/bandit\n        security_tool: Bandit\n      uses: ghcr.io/jitsecurity-controls/control-bandit-slim:main\n      with:\n        args: -r \\${WORK_DIR:-.} -f json -q -lll -iii\n    tags:\n      languages:\n      - python\n  static-code-analysis-scala:\n    asset_type: repo\n    if:\n      languages:\n      - scala\n    runner: github_actions\n    steps:\n    - name: Run semgrep scala\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control\n          security_tool: https://github.com/returntocorp/semgrep\n        security_tool: Semgrep\n      uses: ghcr.io/jitsecurity-controls/control-semgrep-alpine:main\n      with:\n        args: --json --config=/semgrep-scala-config.yml --metrics=off --severity=ERROR\n          \\${WORK_DIR:-.}\n    tags:\n      languages:\n      - scala\nname: SAST Workflow\ntrigger:\n  true:\n  - item_activated\n  - resource_added\n  - pull_request_created\n  - pull_request_updated\n  - merge_default_branch\n  depends_on:\n  - workflow-enrichment-code\n",
                        "depends_on": [
                            "workflow-enrichment-code"
                        ],
                        "parsed_content": {
                            "name": "SAST Workflow",
                            "jobs": {
                                "static-code-analysis-scala": {
                                    "asset_type": "repo",
                                    "runner": "github_actions",
                                    "if": {
                                        "languages": [
                                            "scala"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run semgrep scala",
                                            "with": {
                                                "args": "--json --config=/semgrep-scala-config.yml --metrics=off --severity=ERROR \\${WORK_DIR:-.}"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-semgrep-alpine:main",
                                            "tags": {
                                                "security_tool": "Semgrep",
                                                "links": {
                                                    "security_tool": "https://github.com/returntocorp/semgrep",
                                                    "github": "https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "scala"
                                        ]
                                    }
                                },
                                "static-code-analysis-go": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "languages": [
                                            "go"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run Go",
                                            "with": {
                                                "args": "-fmt=json -severity=high \\${WORK_DIR:-.}/..."
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-gosec-alpine:main",
                                            "tags": {
                                                "security_tool": "Gosec",
                                                "links": {
                                                    "security_tool": "https://github.com/securego/gosec",
                                                    "github": "https://github.com/jitsecurity-controls/jit-golang-code-scanning-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "go"
                                        ]
                                    }
                                },
                                "static-code-analysis-python": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "languages": [
                                            "python"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run Bandit",
                                            "with": {
                                                "args": "-r \\${WORK_DIR:-.} -f json -q -lll -iii"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-bandit-slim:main",
                                            "tags": {
                                                "security_tool": "Bandit",
                                                "links": {
                                                    "security_tool": "https://github.com/PyCQA/bandit",
                                                    "github": "https://github.com/jitsecurity-controls/jit-python-code-scanning-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "python"
                                        ]
                                    }
                                },
                                "static-code-analysis-java": {
                                    "asset_type": "repo",
                                    "runner": "github_actions",
                                    "if": {
                                        "languages": [
                                            "java"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run semgrep java",
                                            "with": {
                                                "args": "--json --config=/semgrep-java-config.yml --metrics=off --severity=ERROR \\${WORK_DIR:-.}"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-semgrep-alpine:main",
                                            "tags": {
                                                "security_tool": "Semgrep",
                                                "links": {
                                                    "security_tool": "https://github.com/returntocorp/semgrep",
                                                    "github": "https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "java"
                                        ]
                                    }
                                },
                                "static-code-analysis-js": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "languages": [
                                            "javascript",
                                            "typescript"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run semgrep javascript and typescript",
                                            "with": {
                                                "args": "--json --config=/semgrep-ts-config.yml --metrics=off --severity=ERROR \\${WORK_DIR:-.}"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-semgrep-alpine:main",
                                            "tags": {
                                                "security_tool": "Semgrep",
                                                "links": {
                                                    "security_tool": "https://github.com/returntocorp/semgrep",
                                                    "github": "https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "javascript",
                                            "typescript",
                                            "JS",
                                            "TS"
                                        ]
                                    }
                                }
                            },
                            "trigger": {
                                "true": [
                                    "item_activated",
                                    "resource_added",
                                    "pull_request_created",
                                    "pull_request_updated",
                                    "merge_default_branch"
                                ],
                                "depends_on": [
                                    "workflow-enrichment-code"
                                ]
                            }
                        },
                        "params": null,
                        "plan_item_template_slug": null,
                        "asset_types": [
                            "repo",
                            "repo",
                            "repo",
                            "repo",
                            "repo",
                            "repo"
                        ]
                    },
                    "raw_job_template": {
                        "asset_type": "repo",
                        "runner": "github_actions",
                        "if": {
                            "languages": [
                                "java"
                            ]
                        },
                        "steps": [
                            {
                                "name": "Run semgrep java",
                                "with": {
                                    "args": "--json --config=/semgrep-java-config.yml --metrics=off --severity=ERROR \\${WORK_DIR:-.}"
                                },
                                "uses": "ghcr.io/jitsecurity-controls/control-semgrep-alpine:main",
                                "tags": {
                                    "security_tool": "Semgrep",
                                    "links": {
                                        "security_tool": "https://github.com/returntocorp/semgrep",
                                        "github": "https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control"
                                    }
                                }
                            }
                        ],
                        "tags": {
                            "languages": [
                                "java"
                            ]
                        }
                    },
                    "depends_on_slugs": [
                        "workflow-enrichment-code"
                    ]
                },
                {
                    "plan_item_slug": "item-code-vulnerability",
                    "workflow_slug": "workflow-sast",
                    "workflow_name": "SAST Workflow",
                    "job_name": "static-code-analysis-python",
                    "workflow_template": {
                        "slug": "workflow-sast",
                        "name": "SAST Workflow",
                        "type": "workflow",
                        "default": true,
                        "content": "jobs:\n  static-code-analysis-go:\n    asset_type: repo\n    default: true\n    if:\n      languages:\n      - go\n    runner: github_actions\n    steps:\n    - name: Run Go\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-golang-code-scanning-control\n          security_tool: https://github.com/securego/gosec\n        security_tool: Gosec\n      uses: ghcr.io/jitsecurity-controls/control-gosec-alpine:main\n      with:\n        args: -fmt=json -severity=high \\${WORK_DIR:-.}/...\n    tags:\n      languages:\n      - go\n  static-code-analysis-java:\n    asset_type: repo\n    if:\n      languages:\n      - java\n    runner: github_actions\n    steps:\n    - name: Run semgrep java\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control\n          security_tool: https://github.com/returntocorp/semgrep\n        security_tool: Semgrep\n      uses: ghcr.io/jitsecurity-controls/control-semgrep-alpine:main\n      with:\n        args: --json --config=/semgrep-java-config.yml --metrics=off --severity=ERROR\n          \\${WORK_DIR:-.}\n    tags:\n      languages:\n      - java\n  static-code-analysis-js:\n    asset_type: repo\n    default: true\n    if:\n      languages:\n      - javascript\n      - typescript\n    runner: github_actions\n    steps:\n    - name: Run semgrep javascript and typescript\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control\n          security_tool: https://github.com/returntocorp/semgrep\n        security_tool: Semgrep\n      uses: ghcr.io/jitsecurity-controls/control-semgrep-alpine:main\n      with:\n        args: --json --config=/semgrep-ts-config.yml --metrics=off --severity=ERROR\n          \\${WORK_DIR:-.}\n    tags:\n      languages:\n      - javascript\n      - typescript\n      - JS\n      - TS\n  static-code-analysis-python:\n    asset_type: repo\n    default: true\n    if:\n      languages:\n      - python\n    runner: github_actions\n    steps:\n    - name: Run Bandit\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-python-code-scanning-control\n          security_tool: https://github.com/PyCQA/bandit\n        security_tool: Bandit\n      uses: ghcr.io/jitsecurity-controls/control-bandit-slim:main\n      with:\n        args: -r \\${WORK_DIR:-.} -f json -q -lll -iii\n    tags:\n      languages:\n      - python\n  static-code-analysis-scala:\n    asset_type: repo\n    if:\n      languages:\n      - scala\n    runner: github_actions\n    steps:\n    - name: Run semgrep scala\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control\n          security_tool: https://github.com/returntocorp/semgrep\n        security_tool: Semgrep\n      uses: ghcr.io/jitsecurity-controls/control-semgrep-alpine:main\n      with:\n        args: --json --config=/semgrep-scala-config.yml --metrics=off --severity=ERROR\n          \\${WORK_DIR:-.}\n    tags:\n      languages:\n      - scala\nname: SAST Workflow\ntrigger:\n  true:\n  - item_activated\n  - resource_added\n  - pull_request_created\n  - pull_request_updated\n  - merge_default_branch\n  depends_on:\n  - workflow-enrichment-code\n",
                        "depends_on": [
                            "workflow-enrichment-code"
                        ],
                        "parsed_content": {
                            "name": "SAST Workflow",
                            "jobs": {
                                "static-code-analysis-scala": {
                                    "asset_type": "repo",
                                    "runner": "github_actions",
                                    "if": {
                                        "languages": [
                                            "scala"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run semgrep scala",
                                            "with": {
                                                "args": "--json --config=/semgrep-scala-config.yml --metrics=off --severity=ERROR \\${WORK_DIR:-.}"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-semgrep-alpine:main",
                                            "tags": {
                                                "security_tool": "Semgrep",
                                                "links": {
                                                    "security_tool": "https://github.com/returntocorp/semgrep",
                                                    "github": "https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "scala"
                                        ]
                                    }
                                },
                                "static-code-analysis-go": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "languages": [
                                            "go"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run Go",
                                            "with": {
                                                "args": "-fmt=json -severity=high \\${WORK_DIR:-.}/..."
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-gosec-alpine:main",
                                            "tags": {
                                                "security_tool": "Gosec",
                                                "links": {
                                                    "security_tool": "https://github.com/securego/gosec",
                                                    "github": "https://github.com/jitsecurity-controls/jit-golang-code-scanning-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "go"
                                        ]
                                    }
                                },
                                "static-code-analysis-python": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "languages": [
                                            "python"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run Bandit",
                                            "with": {
                                                "args": "-r \\${WORK_DIR:-.} -f json -q -lll -iii"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-bandit-slim:main",
                                            "tags": {
                                                "security_tool": "Bandit",
                                                "links": {
                                                    "security_tool": "https://github.com/PyCQA/bandit",
                                                    "github": "https://github.com/jitsecurity-controls/jit-python-code-scanning-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "python"
                                        ]
                                    }
                                },
                                "static-code-analysis-java": {
                                    "asset_type": "repo",
                                    "runner": "github_actions",
                                    "if": {
                                        "languages": [
                                            "java"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run semgrep java",
                                            "with": {
                                                "args": "--json --config=/semgrep-java-config.yml --metrics=off --severity=ERROR \\${WORK_DIR:-.}"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-semgrep-alpine:main",
                                            "tags": {
                                                "security_tool": "Semgrep",
                                                "links": {
                                                    "security_tool": "https://github.com/returntocorp/semgrep",
                                                    "github": "https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "java"
                                        ]
                                    }
                                },
                                "static-code-analysis-js": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "languages": [
                                            "javascript",
                                            "typescript"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run semgrep javascript and typescript",
                                            "with": {
                                                "args": "--json --config=/semgrep-ts-config.yml --metrics=off --severity=ERROR \\${WORK_DIR:-.}"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-semgrep-alpine:main",
                                            "tags": {
                                                "security_tool": "Semgrep",
                                                "links": {
                                                    "security_tool": "https://github.com/returntocorp/semgrep",
                                                    "github": "https://github.com/jitsecurity-controls/jit-semgrep-code-scanning-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "javascript",
                                            "typescript",
                                            "JS",
                                            "TS"
                                        ]
                                    }
                                }
                            },
                            "trigger": {
                                "true": [
                                    "item_activated",
                                    "resource_added",
                                    "pull_request_created",
                                    "pull_request_updated",
                                    "merge_default_branch"
                                ],
                                "depends_on": [
                                    "workflow-enrichment-code"
                                ]
                            }
                        },
                        "params": null,
                        "plan_item_template_slug": null,
                        "asset_types": [
                            "repo",
                            "repo",
                            "repo",
                            "repo",
                            "repo",
                            "repo"
                        ]
                    },
                    "raw_job_template": {
                        "asset_type": "repo",
                        "default": true,
                        "runner": "github_actions",
                        "if": {
                            "languages": [
                                "python"
                            ]
                        },
                        "steps": [
                            {
                                "name": "Run Bandit",
                                "with": {
                                    "args": "-r \\${WORK_DIR:-.} -f json -q -lll -iii"
                                },
                                "uses": "ghcr.io/jitsecurity-controls/control-bandit-slim:main",
                                "tags": {
                                    "security_tool": "Bandit",
                                    "links": {
                                        "security_tool": "https://github.com/PyCQA/bandit",
                                        "github": "https://github.com/jitsecurity-controls/jit-python-code-scanning-control"
                                    }
                                }
                            }
                        ],
                        "tags": {
                            "languages": [
                                "python"
                            ]
                        }
                    },
                    "depends_on_slugs": [
                        "workflow-enrichment-code"
                    ]
                },
                {
                    "plan_item_slug": "item-dependency-check",
                    "workflow_slug": "workflow-sca",
                    "workflow_name": "SCA Workflow",
                    "job_name": "software-component-analysis-go",
                    "workflow_template": {
                        "slug": "workflow-sca",
                        "name": "SCA Workflow",
                        "type": "workflow",
                        "default": true,
                        "content": "jobs:\n  software-component-analysis:\n    asset_type: repo\n    default: true\n    if:\n      package_managers:\n      - pip\n      - composer\n    runner: github_actions\n    steps:\n    - name: Run osv-scanner\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-osv-scanner-control\n          security_tool: https://github.com/google/osv-scanner\n        security_tool: OSV Scanner\n      uses: ghcr.io/jitsecurity-controls/control-osv-scanner-alpine:main\n      with:\n        args: --recursive \\${WORK_DIR:-.}\n    tags:\n      languages:\n      - python\n      - php_deps\n  software-component-analysis-go:\n    asset_type: repo\n    default: true\n    if:\n      package_managers:\n      - go_modules\n    runner: github_actions\n    steps:\n    - name: Run nancy\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-nancy-control\n          security_tool: https://github.com/sonatype-nexus-community/nancy\n        security_tool: Nancy\n      uses: ghcr.io/jitsecurity-controls/control-nancy-alpine:main\n    tags:\n      languages:\n      - go\n      - go_deps\n  software-component-analysis-js:\n    asset_type: repo\n    default: true\n    if:\n      package_managers:\n      - npm\n      - yarn\n    runner: github_actions\n    steps:\n    - name: Run npm audit\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-dependency-check-node-control\n          security_tool: https://docs.npmjs.com/cli/v9/commands/npm-audit\n        security_tool: Npm-audit\n      uses: ghcr.io/jitsecurity-controls/control-npm-audit-slim:main\n      with:\n        output_file: /code/jit-report/enriched-audit-results.json\n    tags:\n      languages:\n      - js_deps\nname: SCA Workflow\ntrigger:\n  true:\n  - item_activated\n  - resource_added\n  - pull_request_created\n  - pull_request_updated\n  - merge_default_branch\n  depends_on:\n  - workflow-enrichment-code\n",
                        "depends_on": [
                            "workflow-enrichment-code"
                        ],
                        "parsed_content": {
                            "name": "SCA Workflow",
                            "jobs": {
                                "software-component-analysis-js": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "package_managers": [
                                            "npm",
                                            "yarn"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run npm audit",
                                            "with": {
                                                "output_file": "/code/jit-report/enriched-audit-results.json"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-npm-audit-slim:main",
                                            "tags": {
                                                "security_tool": "Npm-audit",
                                                "links": {
                                                    "security_tool": "https://docs.npmjs.com/cli/v9/commands/npm-audit",
                                                    "github": "https://github.com/jitsecurity-controls/jit-dependency-check-node-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "js_deps"
                                        ]
                                    }
                                },
                                "software-component-analysis-go": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "package_managers": [
                                            "go_modules"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run nancy",
                                            "uses": "ghcr.io/jitsecurity-controls/control-nancy-alpine:main",
                                            "tags": {
                                                "security_tool": "Nancy",
                                                "links": {
                                                    "security_tool": "https://github.com/sonatype-nexus-community/nancy",
                                                    "github": "https://github.com/jitsecurity-controls/jit-nancy-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "go",
                                            "go_deps"
                                        ]
                                    }
                                },
                                "software-component-analysis": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "package_managers": [
                                            "pip",
                                            "composer"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run osv-scanner",
                                            "with": {
                                                "args": "--recursive \\${WORK_DIR:-.}"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-osv-scanner-alpine:main",
                                            "tags": {
                                                "security_tool": "OSV Scanner",
                                                "links": {
                                                    "security_tool": "https://github.com/google/osv-scanner",
                                                    "github": "https://github.com/jitsecurity-controls/jit-osv-scanner-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "python",
                                            "php_deps"
                                        ]
                                    }
                                }
                            },
                            "trigger": {
                                "true": [
                                    "item_activated",
                                    "resource_added",
                                    "pull_request_created",
                                    "pull_request_updated",
                                    "merge_default_branch"
                                ],
                                "depends_on": [
                                    "workflow-enrichment-code"
                                ]
                            }
                        },
                        "params": null,
                        "plan_item_template_slug": null,
                        "asset_types": [
                            "repo",
                            "repo",
                            "repo"
                        ]
                    },
                    "raw_job_template": {
                        "asset_type": "repo",
                        "default": true,
                        "runner": "github_actions",
                        "if": {
                            "package_managers": [
                                "go_modules"
                            ]
                        },
                        "steps": [
                            {
                                "name": "Run nancy",
                                "uses": "ghcr.io/jitsecurity-controls/control-nancy-alpine:main",
                                "tags": {
                                    "security_tool": "Nancy",
                                    "links": {
                                        "security_tool": "https://github.com/sonatype-nexus-community/nancy",
                                        "github": "https://github.com/jitsecurity-controls/jit-nancy-control"
                                    }
                                }
                            }
                        ],
                        "tags": {
                            "languages": [
                                "go",
                                "go_deps"
                            ]
                        }
                    },
                    "depends_on_slugs": [
                        "workflow-enrichment-code"
                    ]
                },
                {
                    "plan_item_slug": "item-dependency-check",
                    "workflow_slug": "workflow-sca",
                    "workflow_name": "SCA Workflow",
                    "job_name": "software-component-analysis-js",
                    "workflow_template": {
                        "slug": "workflow-sca",
                        "name": "SCA Workflow",
                        "type": "workflow",
                        "default": true,
                        "content": "jobs:\n  software-component-analysis:\n    asset_type: repo\n    default: true\n    if:\n      package_managers:\n      - pip\n      - composer\n    runner: github_actions\n    steps:\n    - name: Run osv-scanner\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-osv-scanner-control\n          security_tool: https://github.com/google/osv-scanner\n        security_tool: OSV Scanner\n      uses: ghcr.io/jitsecurity-controls/control-osv-scanner-alpine:main\n      with:\n        args: --recursive \\${WORK_DIR:-.}\n    tags:\n      languages:\n      - python\n      - php_deps\n  software-component-analysis-go:\n    asset_type: repo\n    default: true\n    if:\n      package_managers:\n      - go_modules\n    runner: github_actions\n    steps:\n    - name: Run nancy\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-nancy-control\n          security_tool: https://github.com/sonatype-nexus-community/nancy\n        security_tool: Nancy\n      uses: ghcr.io/jitsecurity-controls/control-nancy-alpine:main\n    tags:\n      languages:\n      - go\n      - go_deps\n  software-component-analysis-js:\n    asset_type: repo\n    default: true\n    if:\n      package_managers:\n      - npm\n      - yarn\n    runner: github_actions\n    steps:\n    - name: Run npm audit\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-dependency-check-node-control\n          security_tool: https://docs.npmjs.com/cli/v9/commands/npm-audit\n        security_tool: Npm-audit\n      uses: ghcr.io/jitsecurity-controls/control-npm-audit-slim:main\n      with:\n        output_file: /code/jit-report/enriched-audit-results.json\n    tags:\n      languages:\n      - js_deps\nname: SCA Workflow\ntrigger:\n  true:\n  - item_activated\n  - resource_added\n  - pull_request_created\n  - pull_request_updated\n  - merge_default_branch\n  depends_on:\n  - workflow-enrichment-code\n",
                        "depends_on": [
                            "workflow-enrichment-code"
                        ],
                        "parsed_content": {
                            "name": "SCA Workflow",
                            "jobs": {
                                "software-component-analysis-js": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "package_managers": [
                                            "npm",
                                            "yarn"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run npm audit",
                                            "with": {
                                                "output_file": "/code/jit-report/enriched-audit-results.json"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-npm-audit-slim:main",
                                            "tags": {
                                                "security_tool": "Npm-audit",
                                                "links": {
                                                    "security_tool": "https://docs.npmjs.com/cli/v9/commands/npm-audit",
                                                    "github": "https://github.com/jitsecurity-controls/jit-dependency-check-node-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "js_deps"
                                        ]
                                    }
                                },
                                "software-component-analysis-go": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "package_managers": [
                                            "go_modules"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run nancy",
                                            "uses": "ghcr.io/jitsecurity-controls/control-nancy-alpine:main",
                                            "tags": {
                                                "security_tool": "Nancy",
                                                "links": {
                                                    "security_tool": "https://github.com/sonatype-nexus-community/nancy",
                                                    "github": "https://github.com/jitsecurity-controls/jit-nancy-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "go",
                                            "go_deps"
                                        ]
                                    }
                                },
                                "software-component-analysis": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "package_managers": [
                                            "pip",
                                            "composer"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run osv-scanner",
                                            "with": {
                                                "args": "--recursive \\${WORK_DIR:-.}"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-osv-scanner-alpine:main",
                                            "tags": {
                                                "security_tool": "OSV Scanner",
                                                "links": {
                                                    "security_tool": "https://github.com/google/osv-scanner",
                                                    "github": "https://github.com/jitsecurity-controls/jit-osv-scanner-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "python",
                                            "php_deps"
                                        ]
                                    }
                                }
                            },
                            "trigger": {
                                "true": [
                                    "item_activated",
                                    "resource_added",
                                    "pull_request_created",
                                    "pull_request_updated",
                                    "merge_default_branch"
                                ],
                                "depends_on": [
                                    "workflow-enrichment-code"
                                ]
                            }
                        },
                        "params": null,
                        "plan_item_template_slug": null,
                        "asset_types": [
                            "repo",
                            "repo",
                            "repo"
                        ]
                    },
                    "raw_job_template": {
                        "asset_type": "repo",
                        "default": true,
                        "runner": "github_actions",
                        "if": {
                            "package_managers": [
                                "npm",
                                "yarn"
                            ]
                        },
                        "steps": [
                            {
                                "name": "Run npm audit",
                                "with": {
                                    "output_file": "/code/jit-report/enriched-audit-results.json"
                                },
                                "uses": "ghcr.io/jitsecurity-controls/control-npm-audit-slim:main",
                                "tags": {
                                    "security_tool": "Npm-audit",
                                    "links": {
                                        "security_tool": "https://docs.npmjs.com/cli/v9/commands/npm-audit",
                                        "github": "https://github.com/jitsecurity-controls/jit-dependency-check-node-control"
                                    }
                                }
                            }
                        ],
                        "tags": {
                            "languages": [
                                "js_deps"
                            ]
                        }
                    },
                    "depends_on_slugs": [
                        "workflow-enrichment-code"
                    ]
                },
                {
                    "plan_item_slug": "item-dependency-check",
                    "workflow_slug": "workflow-sca",
                    "workflow_name": "SCA Workflow",
                    "job_name": "software-component-analysis",
                    "workflow_template": {
                        "slug": "workflow-sca",
                        "name": "SCA Workflow",
                        "type": "workflow",
                        "default": true,
                        "content": "jobs:\n  software-component-analysis:\n    asset_type: repo\n    default: true\n    if:\n      package_managers:\n      - pip\n      - composer\n    runner: github_actions\n    steps:\n    - name: Run osv-scanner\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-osv-scanner-control\n          security_tool: https://github.com/google/osv-scanner\n        security_tool: OSV Scanner\n      uses: ghcr.io/jitsecurity-controls/control-osv-scanner-alpine:main\n      with:\n        args: --recursive \\${WORK_DIR:-.}\n    tags:\n      languages:\n      - python\n      - php_deps\n  software-component-analysis-go:\n    asset_type: repo\n    default: true\n    if:\n      package_managers:\n      - go_modules\n    runner: github_actions\n    steps:\n    - name: Run nancy\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-nancy-control\n          security_tool: https://github.com/sonatype-nexus-community/nancy\n        security_tool: Nancy\n      uses: ghcr.io/jitsecurity-controls/control-nancy-alpine:main\n    tags:\n      languages:\n      - go\n      - go_deps\n  software-component-analysis-js:\n    asset_type: repo\n    default: true\n    if:\n      package_managers:\n      - npm\n      - yarn\n    runner: github_actions\n    steps:\n    - name: Run npm audit\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-dependency-check-node-control\n          security_tool: https://docs.npmjs.com/cli/v9/commands/npm-audit\n        security_tool: Npm-audit\n      uses: ghcr.io/jitsecurity-controls/control-npm-audit-slim:main\n      with:\n        output_file: /code/jit-report/enriched-audit-results.json\n    tags:\n      languages:\n      - js_deps\nname: SCA Workflow\ntrigger:\n  true:\n  - item_activated\n  - resource_added\n  - pull_request_created\n  - pull_request_updated\n  - merge_default_branch\n  depends_on:\n  - workflow-enrichment-code\n",
                        "depends_on": [
                            "workflow-enrichment-code"
                        ],
                        "parsed_content": {
                            "name": "SCA Workflow",
                            "jobs": {
                                "software-component-analysis-js": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "package_managers": [
                                            "npm",
                                            "yarn"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run npm audit",
                                            "with": {
                                                "output_file": "/code/jit-report/enriched-audit-results.json"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-npm-audit-slim:main",
                                            "tags": {
                                                "security_tool": "Npm-audit",
                                                "links": {
                                                    "security_tool": "https://docs.npmjs.com/cli/v9/commands/npm-audit",
                                                    "github": "https://github.com/jitsecurity-controls/jit-dependency-check-node-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "js_deps"
                                        ]
                                    }
                                },
                                "software-component-analysis-go": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "package_managers": [
                                            "go_modules"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run nancy",
                                            "uses": "ghcr.io/jitsecurity-controls/control-nancy-alpine:main",
                                            "tags": {
                                                "security_tool": "Nancy",
                                                "links": {
                                                    "security_tool": "https://github.com/sonatype-nexus-community/nancy",
                                                    "github": "https://github.com/jitsecurity-controls/jit-nancy-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "go",
                                            "go_deps"
                                        ]
                                    }
                                },
                                "software-component-analysis": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "package_managers": [
                                            "pip",
                                            "composer"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run osv-scanner",
                                            "with": {
                                                "args": "--recursive \\${WORK_DIR:-.}"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-osv-scanner-alpine:main",
                                            "tags": {
                                                "security_tool": "OSV Scanner",
                                                "links": {
                                                    "security_tool": "https://github.com/google/osv-scanner",
                                                    "github": "https://github.com/jitsecurity-controls/jit-osv-scanner-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "python",
                                            "php_deps"
                                        ]
                                    }
                                }
                            },
                            "trigger": {
                                "true": [
                                    "item_activated",
                                    "resource_added",
                                    "pull_request_created",
                                    "pull_request_updated",
                                    "merge_default_branch"
                                ],
                                "depends_on": [
                                    "workflow-enrichment-code"
                                ]
                            }
                        },
                        "params": null,
                        "plan_item_template_slug": null,
                        "asset_types": [
                            "repo",
                            "repo",
                            "repo"
                        ]
                    },
                    "raw_job_template": {
                        "asset_type": "repo",
                        "default": true,
                        "runner": "github_actions",
                        "if": {
                            "package_managers": [
                                "pip",
                                "composer"
                            ]
                        },
                        "steps": [
                            {
                                "name": "Run osv-scanner",
                                "with": {
                                    "args": "--recursive \\${WORK_DIR:-.}"
                                },
                                "uses": "ghcr.io/jitsecurity-controls/control-osv-scanner-alpine:main",
                                "tags": {
                                    "security_tool": "OSV Scanner",
                                    "links": {
                                        "security_tool": "https://github.com/google/osv-scanner",
                                        "github": "https://github.com/jitsecurity-controls/jit-osv-scanner-control"
                                    }
                                }
                            }
                        ],
                        "tags": {
                            "languages": [
                                "python",
                                "php_deps"
                            ]
                        }
                    },
                    "depends_on_slugs": [
                        "workflow-enrichment-code"
                    ]
                },
                {
                    "plan_item_slug": "item-iac-misconfiguration-detection",
                    "workflow_slug": "workflow-iac-misconfiguration-detection",
                    "workflow_name": "IaC Misconfiguration Detection Workflow",
                    "job_name": "iac-misconfig-detection-terraform",
                    "workflow_template": {
                        "slug": "workflow-iac-misconfiguration-detection",
                        "name": "IaC Misconfiguration Detection Workflow",
                        "type": "workflow",
                        "default": true,
                        "content": "jobs:\n  iac-misconfig-detection-cloudformation:\n    asset_type: repo\n    default: true\n    if:\n      frameworks:\n      - cloudformation\n    runner: github_actions\n    steps:\n    - name: Run KICS (cloudformation)\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control\n          security_tool: https://github.com/Checkmarx/kics\n        security_tool: Kics\n      uses: ghcr.io/jitsecurity-controls/control-kics-alpine:main\n      with:\n        args: scan -t CloudFormation -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config\n          \\/cloudformation-config.yaml --disable-secrets\n        output_file: /code/jit-report/results.json\n    tags:\n      languages:\n      - cloudformation\n      - aws_cdk_output\n  iac-misconfig-detection-pulumi:\n    asset_type: repo\n    default: true\n    if:\n      frameworks:\n      - pulumi\n    runner: github_actions\n    steps:\n    - name: Run KICS (pulumi)\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control\n          security_tool: https://github.com/Checkmarx/kics\n        security_tool: Kics\n      uses: ghcr.io/jitsecurity-controls/control-kics-alpine:main\n      with:\n        args: scan -t Pulumi -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config\n          \\/pulumi-config.yaml --disable-secrets\n        output_file: /code/jit-report/results.json\n    tags:\n      languages:\n      - pulumi\n  iac-misconfig-detection-serverless:\n    asset_type: repo\n    default: true\n    if:\n      frameworks:\n      - serverless\n    runner: github_actions\n    steps:\n    - name: Run KICS (serverless)\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control\n          security_tool: https://github.com/Checkmarx/kics\n        security_tool: Kics\n      uses: ghcr.io/jitsecurity-controls/control-kics-alpine:main\n      with:\n        args: scan -t ServerlessFW -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config\n          \\/serverless-config.yaml --disable-secrets\n        output_file: /code/jit-report/results.json\n    tags:\n      languages:\n      - serverless\n  iac-misconfig-detection-terraform:\n    asset_type: repo\n    default: true\n    if:\n      frameworks:\n      - terraform\n    runner: github_actions\n    steps:\n    - name: Run KICS (terraform)\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control\n          security_tool: https://github.com/Checkmarx/kics\n        security_tool: Kics\n      uses: ghcr.io/jitsecurity-controls/control-kics-alpine:main\n      with:\n        args: scan -t Terraform -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config\n          \\/terraform-config.yaml --disable-secrets\n        output_file: /code/jit-report/results.json\n    tags:\n      languages:\n      - terraform\nname: IaC Misconfiguration Detection Workflow\ntrigger:\n  true:\n  - item_activated\n  - resource_added\n  - pull_request_created\n  - pull_request_updated\n  - merge_default_branch\n  depends_on:\n  - workflow-enrichment-code\n",
                        "depends_on": [
                            "workflow-enrichment-code"
                        ],
                        "parsed_content": {
                            "name": "IaC Misconfiguration Detection Workflow",
                            "jobs": {
                                "iac-misconfig-detection-pulumi": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "frameworks": [
                                            "pulumi"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run KICS (pulumi)",
                                            "with": {
                                                "args": "scan -t Pulumi -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/pulumi-config.yaml --disable-secrets",
                                                "output_file": "/code/jit-report/results.json"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                            "tags": {
                                                "security_tool": "Kics",
                                                "links": {
                                                    "security_tool": "https://github.com/Checkmarx/kics",
                                                    "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "pulumi"
                                        ]
                                    }
                                },
                                "iac-misconfig-detection-cloudformation": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "frameworks": [
                                            "cloudformation"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run KICS (cloudformation)",
                                            "with": {
                                                "args": "scan -t CloudFormation -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/cloudformation-config.yaml --disable-secrets",
                                                "output_file": "/code/jit-report/results.json"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                            "tags": {
                                                "security_tool": "Kics",
                                                "links": {
                                                    "security_tool": "https://github.com/Checkmarx/kics",
                                                    "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "cloudformation",
                                            "aws_cdk_output"
                                        ]
                                    }
                                },
                                "iac-misconfig-detection-terraform": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "frameworks": [
                                            "terraform"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run KICS (terraform)",
                                            "with": {
                                                "args": "scan -t Terraform -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/terraform-config.yaml --disable-secrets",
                                                "output_file": "/code/jit-report/results.json"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                            "tags": {
                                                "security_tool": "Kics",
                                                "links": {
                                                    "security_tool": "https://github.com/Checkmarx/kics",
                                                    "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "terraform"
                                        ]
                                    }
                                },
                                "iac-misconfig-detection-serverless": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "frameworks": [
                                            "serverless"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run KICS (serverless)",
                                            "with": {
                                                "args": "scan -t ServerlessFW -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/serverless-config.yaml --disable-secrets",
                                                "output_file": "/code/jit-report/results.json"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                            "tags": {
                                                "security_tool": "Kics",
                                                "links": {
                                                    "security_tool": "https://github.com/Checkmarx/kics",
                                                    "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "serverless"
                                        ]
                                    }
                                }
                            },
                            "trigger": {
                                "true": [
                                    "item_activated",
                                    "resource_added",
                                    "pull_request_created",
                                    "pull_request_updated",
                                    "merge_default_branch"
                                ],
                                "depends_on": [
                                    "workflow-enrichment-code"
                                ]
                            }
                        },
                        "params": null,
                        "plan_item_template_slug": null,
                        "asset_types": [
                            "repo",
                            "repo",
                            "repo",
                            "repo"
                        ]
                    },
                    "raw_job_template": {
                        "asset_type": "repo",
                        "default": true,
                        "runner": "github_actions",
                        "if": {
                            "frameworks": [
                                "terraform"
                            ]
                        },
                        "steps": [
                            {
                                "name": "Run KICS (terraform)",
                                "with": {
                                    "args": "scan -t Terraform -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/terraform-config.yaml --disable-secrets",
                                    "output_file": "/code/jit-report/results.json"
                                },
                                "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                "tags": {
                                    "security_tool": "Kics",
                                    "links": {
                                        "security_tool": "https://github.com/Checkmarx/kics",
                                        "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                    }
                                }
                            }
                        ],
                        "tags": {
                            "languages": [
                                "terraform"
                            ]
                        }
                    },
                    "depends_on_slugs": [
                        "workflow-enrichment-code"
                    ]
                },
                {
                    "plan_item_slug": "item-iac-misconfiguration-detection",
                    "workflow_slug": "workflow-iac-misconfiguration-detection",
                    "workflow_name": "IaC Misconfiguration Detection Workflow",
                    "job_name": "iac-misconfig-detection-serverless",
                    "workflow_template": {
                        "slug": "workflow-iac-misconfiguration-detection",
                        "name": "IaC Misconfiguration Detection Workflow",
                        "type": "workflow",
                        "default": true,
                        "content": "jobs:\n  iac-misconfig-detection-cloudformation:\n    asset_type: repo\n    default: true\n    if:\n      frameworks:\n      - cloudformation\n    runner: github_actions\n    steps:\n    - name: Run KICS (cloudformation)\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control\n          security_tool: https://github.com/Checkmarx/kics\n        security_tool: Kics\n      uses: ghcr.io/jitsecurity-controls/control-kics-alpine:main\n      with:\n        args: scan -t CloudFormation -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config\n          \\/cloudformation-config.yaml --disable-secrets\n        output_file: /code/jit-report/results.json\n    tags:\n      languages:\n      - cloudformation\n      - aws_cdk_output\n  iac-misconfig-detection-pulumi:\n    asset_type: repo\n    default: true\n    if:\n      frameworks:\n      - pulumi\n    runner: github_actions\n    steps:\n    - name: Run KICS (pulumi)\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control\n          security_tool: https://github.com/Checkmarx/kics\n        security_tool: Kics\n      uses: ghcr.io/jitsecurity-controls/control-kics-alpine:main\n      with:\n        args: scan -t Pulumi -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config\n          \\/pulumi-config.yaml --disable-secrets\n        output_file: /code/jit-report/results.json\n    tags:\n      languages:\n      - pulumi\n  iac-misconfig-detection-serverless:\n    asset_type: repo\n    default: true\n    if:\n      frameworks:\n      - serverless\n    runner: github_actions\n    steps:\n    - name: Run KICS (serverless)\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control\n          security_tool: https://github.com/Checkmarx/kics\n        security_tool: Kics\n      uses: ghcr.io/jitsecurity-controls/control-kics-alpine:main\n      with:\n        args: scan -t ServerlessFW -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config\n          \\/serverless-config.yaml --disable-secrets\n        output_file: /code/jit-report/results.json\n    tags:\n      languages:\n      - serverless\n  iac-misconfig-detection-terraform:\n    asset_type: repo\n    default: true\n    if:\n      frameworks:\n      - terraform\n    runner: github_actions\n    steps:\n    - name: Run KICS (terraform)\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control\n          security_tool: https://github.com/Checkmarx/kics\n        security_tool: Kics\n      uses: ghcr.io/jitsecurity-controls/control-kics-alpine:main\n      with:\n        args: scan -t Terraform -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config\n          \\/terraform-config.yaml --disable-secrets\n        output_file: /code/jit-report/results.json\n    tags:\n      languages:\n      - terraform\nname: IaC Misconfiguration Detection Workflow\ntrigger:\n  true:\n  - item_activated\n  - resource_added\n  - pull_request_created\n  - pull_request_updated\n  - merge_default_branch\n  depends_on:\n  - workflow-enrichment-code\n",
                        "depends_on": [
                            "workflow-enrichment-code"
                        ],
                        "parsed_content": {
                            "name": "IaC Misconfiguration Detection Workflow",
                            "jobs": {
                                "iac-misconfig-detection-pulumi": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "frameworks": [
                                            "pulumi"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run KICS (pulumi)",
                                            "with": {
                                                "args": "scan -t Pulumi -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/pulumi-config.yaml --disable-secrets",
                                                "output_file": "/code/jit-report/results.json"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                            "tags": {
                                                "security_tool": "Kics",
                                                "links": {
                                                    "security_tool": "https://github.com/Checkmarx/kics",
                                                    "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "pulumi"
                                        ]
                                    }
                                },
                                "iac-misconfig-detection-cloudformation": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "frameworks": [
                                            "cloudformation"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run KICS (cloudformation)",
                                            "with": {
                                                "args": "scan -t CloudFormation -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/cloudformation-config.yaml --disable-secrets",
                                                "output_file": "/code/jit-report/results.json"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                            "tags": {
                                                "security_tool": "Kics",
                                                "links": {
                                                    "security_tool": "https://github.com/Checkmarx/kics",
                                                    "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "cloudformation",
                                            "aws_cdk_output"
                                        ]
                                    }
                                },
                                "iac-misconfig-detection-terraform": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "frameworks": [
                                            "terraform"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run KICS (terraform)",
                                            "with": {
                                                "args": "scan -t Terraform -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/terraform-config.yaml --disable-secrets",
                                                "output_file": "/code/jit-report/results.json"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                            "tags": {
                                                "security_tool": "Kics",
                                                "links": {
                                                    "security_tool": "https://github.com/Checkmarx/kics",
                                                    "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "terraform"
                                        ]
                                    }
                                },
                                "iac-misconfig-detection-serverless": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "frameworks": [
                                            "serverless"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run KICS (serverless)",
                                            "with": {
                                                "args": "scan -t ServerlessFW -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/serverless-config.yaml --disable-secrets",
                                                "output_file": "/code/jit-report/results.json"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                            "tags": {
                                                "security_tool": "Kics",
                                                "links": {
                                                    "security_tool": "https://github.com/Checkmarx/kics",
                                                    "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "serverless"
                                        ]
                                    }
                                }
                            },
                            "trigger": {
                                "true": [
                                    "item_activated",
                                    "resource_added",
                                    "pull_request_created",
                                    "pull_request_updated",
                                    "merge_default_branch"
                                ],
                                "depends_on": [
                                    "workflow-enrichment-code"
                                ]
                            }
                        },
                        "params": null,
                        "plan_item_template_slug": null,
                        "asset_types": [
                            "repo",
                            "repo",
                            "repo",
                            "repo"
                        ]
                    },
                    "raw_job_template": {
                        "asset_type": "repo",
                        "default": true,
                        "runner": "github_actions",
                        "if": {
                            "frameworks": [
                                "serverless"
                            ]
                        },
                        "steps": [
                            {
                                "name": "Run KICS (serverless)",
                                "with": {
                                    "args": "scan -t ServerlessFW -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/serverless-config.yaml --disable-secrets",
                                    "output_file": "/code/jit-report/results.json"
                                },
                                "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                "tags": {
                                    "security_tool": "Kics",
                                    "links": {
                                        "security_tool": "https://github.com/Checkmarx/kics",
                                        "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                    }
                                }
                            }
                        ],
                        "tags": {
                            "languages": [
                                "serverless"
                            ]
                        }
                    },
                    "depends_on_slugs": [
                        "workflow-enrichment-code"
                    ]
                },
                {
                    "plan_item_slug": "item-iac-misconfiguration-detection",
                    "workflow_slug": "workflow-iac-misconfiguration-detection",
                    "workflow_name": "IaC Misconfiguration Detection Workflow",
                    "job_name": "iac-misconfig-detection-cloudformation",
                    "workflow_template": {
                        "slug": "workflow-iac-misconfiguration-detection",
                        "name": "IaC Misconfiguration Detection Workflow",
                        "type": "workflow",
                        "default": true,
                        "content": "jobs:\n  iac-misconfig-detection-cloudformation:\n    asset_type: repo\n    default: true\n    if:\n      frameworks:\n      - cloudformation\n    runner: github_actions\n    steps:\n    - name: Run KICS (cloudformation)\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control\n          security_tool: https://github.com/Checkmarx/kics\n        security_tool: Kics\n      uses: ghcr.io/jitsecurity-controls/control-kics-alpine:main\n      with:\n        args: scan -t CloudFormation -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config\n          \\/cloudformation-config.yaml --disable-secrets\n        output_file: /code/jit-report/results.json\n    tags:\n      languages:\n      - cloudformation\n      - aws_cdk_output\n  iac-misconfig-detection-pulumi:\n    asset_type: repo\n    default: true\n    if:\n      frameworks:\n      - pulumi\n    runner: github_actions\n    steps:\n    - name: Run KICS (pulumi)\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control\n          security_tool: https://github.com/Checkmarx/kics\n        security_tool: Kics\n      uses: ghcr.io/jitsecurity-controls/control-kics-alpine:main\n      with:\n        args: scan -t Pulumi -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config\n          \\/pulumi-config.yaml --disable-secrets\n        output_file: /code/jit-report/results.json\n    tags:\n      languages:\n      - pulumi\n  iac-misconfig-detection-serverless:\n    asset_type: repo\n    default: true\n    if:\n      frameworks:\n      - serverless\n    runner: github_actions\n    steps:\n    - name: Run KICS (serverless)\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control\n          security_tool: https://github.com/Checkmarx/kics\n        security_tool: Kics\n      uses: ghcr.io/jitsecurity-controls/control-kics-alpine:main\n      with:\n        args: scan -t ServerlessFW -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config\n          \\/serverless-config.yaml --disable-secrets\n        output_file: /code/jit-report/results.json\n    tags:\n      languages:\n      - serverless\n  iac-misconfig-detection-terraform:\n    asset_type: repo\n    default: true\n    if:\n      frameworks:\n      - terraform\n    runner: github_actions\n    steps:\n    - name: Run KICS (terraform)\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control\n          security_tool: https://github.com/Checkmarx/kics\n        security_tool: Kics\n      uses: ghcr.io/jitsecurity-controls/control-kics-alpine:main\n      with:\n        args: scan -t Terraform -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config\n          \\/terraform-config.yaml --disable-secrets\n        output_file: /code/jit-report/results.json\n    tags:\n      languages:\n      - terraform\nname: IaC Misconfiguration Detection Workflow\ntrigger:\n  true:\n  - item_activated\n  - resource_added\n  - pull_request_created\n  - pull_request_updated\n  - merge_default_branch\n  depends_on:\n  - workflow-enrichment-code\n",
                        "depends_on": [
                            "workflow-enrichment-code"
                        ],
                        "parsed_content": {
                            "name": "IaC Misconfiguration Detection Workflow",
                            "jobs": {
                                "iac-misconfig-detection-pulumi": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "frameworks": [
                                            "pulumi"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run KICS (pulumi)",
                                            "with": {
                                                "args": "scan -t Pulumi -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/pulumi-config.yaml --disable-secrets",
                                                "output_file": "/code/jit-report/results.json"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                            "tags": {
                                                "security_tool": "Kics",
                                                "links": {
                                                    "security_tool": "https://github.com/Checkmarx/kics",
                                                    "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "pulumi"
                                        ]
                                    }
                                },
                                "iac-misconfig-detection-cloudformation": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "frameworks": [
                                            "cloudformation"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run KICS (cloudformation)",
                                            "with": {
                                                "args": "scan -t CloudFormation -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/cloudformation-config.yaml --disable-secrets",
                                                "output_file": "/code/jit-report/results.json"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                            "tags": {
                                                "security_tool": "Kics",
                                                "links": {
                                                    "security_tool": "https://github.com/Checkmarx/kics",
                                                    "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "cloudformation",
                                            "aws_cdk_output"
                                        ]
                                    }
                                },
                                "iac-misconfig-detection-terraform": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "frameworks": [
                                            "terraform"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run KICS (terraform)",
                                            "with": {
                                                "args": "scan -t Terraform -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/terraform-config.yaml --disable-secrets",
                                                "output_file": "/code/jit-report/results.json"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                            "tags": {
                                                "security_tool": "Kics",
                                                "links": {
                                                    "security_tool": "https://github.com/Checkmarx/kics",
                                                    "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "terraform"
                                        ]
                                    }
                                },
                                "iac-misconfig-detection-serverless": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "frameworks": [
                                            "serverless"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run KICS (serverless)",
                                            "with": {
                                                "args": "scan -t ServerlessFW -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/serverless-config.yaml --disable-secrets",
                                                "output_file": "/code/jit-report/results.json"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                            "tags": {
                                                "security_tool": "Kics",
                                                "links": {
                                                    "security_tool": "https://github.com/Checkmarx/kics",
                                                    "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "serverless"
                                        ]
                                    }
                                }
                            },
                            "trigger": {
                                "true": [
                                    "item_activated",
                                    "resource_added",
                                    "pull_request_created",
                                    "pull_request_updated",
                                    "merge_default_branch"
                                ],
                                "depends_on": [
                                    "workflow-enrichment-code"
                                ]
                            }
                        },
                        "params": null,
                        "plan_item_template_slug": null,
                        "asset_types": [
                            "repo",
                            "repo",
                            "repo",
                            "repo"
                        ]
                    },
                    "raw_job_template": {
                        "asset_type": "repo",
                        "default": true,
                        "runner": "github_actions",
                        "if": {
                            "frameworks": [
                                "cloudformation"
                            ]
                        },
                        "steps": [
                            {
                                "name": "Run KICS (cloudformation)",
                                "with": {
                                    "args": "scan -t CloudFormation -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/cloudformation-config.yaml --disable-secrets",
                                    "output_file": "/code/jit-report/results.json"
                                },
                                "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                "tags": {
                                    "security_tool": "Kics",
                                    "links": {
                                        "security_tool": "https://github.com/Checkmarx/kics",
                                        "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                    }
                                }
                            }
                        ],
                        "tags": {
                            "languages": [
                                "cloudformation",
                                "aws_cdk_output"
                            ]
                        }
                    },
                    "depends_on_slugs": [
                        "workflow-enrichment-code"
                    ]
                },
                {
                    "plan_item_slug": "item-iac-misconfiguration-detection",
                    "workflow_slug": "workflow-iac-misconfiguration-detection",
                    "workflow_name": "IaC Misconfiguration Detection Workflow",
                    "job_name": "iac-misconfig-detection-pulumi",
                    "workflow_template": {
                        "slug": "workflow-iac-misconfiguration-detection",
                        "name": "IaC Misconfiguration Detection Workflow",
                        "type": "workflow",
                        "default": true,
                        "content": "jobs:\n  iac-misconfig-detection-cloudformation:\n    asset_type: repo\n    default: true\n    if:\n      frameworks:\n      - cloudformation\n    runner: github_actions\n    steps:\n    - name: Run KICS (cloudformation)\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control\n          security_tool: https://github.com/Checkmarx/kics\n        security_tool: Kics\n      uses: ghcr.io/jitsecurity-controls/control-kics-alpine:main\n      with:\n        args: scan -t CloudFormation -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config\n          \\/cloudformation-config.yaml --disable-secrets\n        output_file: /code/jit-report/results.json\n    tags:\n      languages:\n      - cloudformation\n      - aws_cdk_output\n  iac-misconfig-detection-pulumi:\n    asset_type: repo\n    default: true\n    if:\n      frameworks:\n      - pulumi\n    runner: github_actions\n    steps:\n    - name: Run KICS (pulumi)\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control\n          security_tool: https://github.com/Checkmarx/kics\n        security_tool: Kics\n      uses: ghcr.io/jitsecurity-controls/control-kics-alpine:main\n      with:\n        args: scan -t Pulumi -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config\n          \\/pulumi-config.yaml --disable-secrets\n        output_file: /code/jit-report/results.json\n    tags:\n      languages:\n      - pulumi\n  iac-misconfig-detection-serverless:\n    asset_type: repo\n    default: true\n    if:\n      frameworks:\n      - serverless\n    runner: github_actions\n    steps:\n    - name: Run KICS (serverless)\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control\n          security_tool: https://github.com/Checkmarx/kics\n        security_tool: Kics\n      uses: ghcr.io/jitsecurity-controls/control-kics-alpine:main\n      with:\n        args: scan -t ServerlessFW -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config\n          \\/serverless-config.yaml --disable-secrets\n        output_file: /code/jit-report/results.json\n    tags:\n      languages:\n      - serverless\n  iac-misconfig-detection-terraform:\n    asset_type: repo\n    default: true\n    if:\n      frameworks:\n      - terraform\n    runner: github_actions\n    steps:\n    - name: Run KICS (terraform)\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control\n          security_tool: https://github.com/Checkmarx/kics\n        security_tool: Kics\n      uses: ghcr.io/jitsecurity-controls/control-kics-alpine:main\n      with:\n        args: scan -t Terraform -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config\n          \\/terraform-config.yaml --disable-secrets\n        output_file: /code/jit-report/results.json\n    tags:\n      languages:\n      - terraform\nname: IaC Misconfiguration Detection Workflow\ntrigger:\n  true:\n  - item_activated\n  - resource_added\n  - pull_request_created\n  - pull_request_updated\n  - merge_default_branch\n  depends_on:\n  - workflow-enrichment-code\n",
                        "depends_on": [
                            "workflow-enrichment-code"
                        ],
                        "parsed_content": {
                            "name": "IaC Misconfiguration Detection Workflow",
                            "jobs": {
                                "iac-misconfig-detection-pulumi": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "frameworks": [
                                            "pulumi"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run KICS (pulumi)",
                                            "with": {
                                                "args": "scan -t Pulumi -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/pulumi-config.yaml --disable-secrets",
                                                "output_file": "/code/jit-report/results.json"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                            "tags": {
                                                "security_tool": "Kics",
                                                "links": {
                                                    "security_tool": "https://github.com/Checkmarx/kics",
                                                    "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "pulumi"
                                        ]
                                    }
                                },
                                "iac-misconfig-detection-cloudformation": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "frameworks": [
                                            "cloudformation"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run KICS (cloudformation)",
                                            "with": {
                                                "args": "scan -t CloudFormation -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/cloudformation-config.yaml --disable-secrets",
                                                "output_file": "/code/jit-report/results.json"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                            "tags": {
                                                "security_tool": "Kics",
                                                "links": {
                                                    "security_tool": "https://github.com/Checkmarx/kics",
                                                    "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "cloudformation",
                                            "aws_cdk_output"
                                        ]
                                    }
                                },
                                "iac-misconfig-detection-terraform": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "frameworks": [
                                            "terraform"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run KICS (terraform)",
                                            "with": {
                                                "args": "scan -t Terraform -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/terraform-config.yaml --disable-secrets",
                                                "output_file": "/code/jit-report/results.json"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                            "tags": {
                                                "security_tool": "Kics",
                                                "links": {
                                                    "security_tool": "https://github.com/Checkmarx/kics",
                                                    "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "terraform"
                                        ]
                                    }
                                },
                                "iac-misconfig-detection-serverless": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "frameworks": [
                                            "serverless"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run KICS (serverless)",
                                            "with": {
                                                "args": "scan -t ServerlessFW -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/serverless-config.yaml --disable-secrets",
                                                "output_file": "/code/jit-report/results.json"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                            "tags": {
                                                "security_tool": "Kics",
                                                "links": {
                                                    "security_tool": "https://github.com/Checkmarx/kics",
                                                    "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                                }
                                            }
                                        }
                                    ],
                                    "tags": {
                                        "languages": [
                                            "serverless"
                                        ]
                                    }
                                }
                            },
                            "trigger": {
                                "true": [
                                    "item_activated",
                                    "resource_added",
                                    "pull_request_created",
                                    "pull_request_updated",
                                    "merge_default_branch"
                                ],
                                "depends_on": [
                                    "workflow-enrichment-code"
                                ]
                            }
                        },
                        "params": null,
                        "plan_item_template_slug": null,
                        "asset_types": [
                            "repo",
                            "repo",
                            "repo",
                            "repo"
                        ]
                    },
                    "raw_job_template": {
                        "asset_type": "repo",
                        "default": true,
                        "runner": "github_actions",
                        "if": {
                            "frameworks": [
                                "pulumi"
                            ]
                        },
                        "steps": [
                            {
                                "name": "Run KICS (pulumi)",
                                "with": {
                                    "args": "scan -t Pulumi -p \\${WORK_DIR:-.} -o \\$REPORT_FILE -f json --config \\/pulumi-config.yaml --disable-secrets",
                                    "output_file": "/code/jit-report/results.json"
                                },
                                "uses": "ghcr.io/jitsecurity-controls/control-kics-alpine:main",
                                "tags": {
                                    "security_tool": "Kics",
                                    "links": {
                                        "security_tool": "https://github.com/Checkmarx/kics",
                                        "github": "https://github.com/jitsecurity-controls/jit-cloud-infrastructure-misconfiguration-control"
                                    }
                                }
                            }
                        ],
                        "tags": {
                            "languages": [
                                "pulumi"
                            ]
                        }
                    },
                    "depends_on_slugs": [
                        "workflow-enrichment-code"
                    ]
                },
                {
                    "plan_item_slug": "item-secret-detection",
                    "workflow_slug": "workflow-secret-detection",
                    "workflow_name": "Secret Detection Workflow",
                    "job_name": "secret-detection",
                    "workflow_template": {
                        "slug": "workflow-secret-detection",
                        "name": "Secret Detection Workflow",
                        "type": "workflow",
                        "default": true,
                        "content": "jobs:\n  secret-detection:\n    asset_type: repo\n    default: true\n    if:\n      mime_types:\n      - text\n    runner: github_actions\n    steps:\n    - name: Run Gitleaks\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-secrets-detection-control\n          security_tool: https://github.com/zricethezav/gitleaks\n        security_tool: Gitleaks\n      uses: ghcr.io/jitsecurity-controls/control-gitleaks-alpine:main\n      with:\n        args: detect --config \\$GITLEAKS_CONFIG_FILE_PATH --source \\${WORK_DIR:-.}\n          -v --report-format json --report-path \\$REPORT_FILE --redact --no-git --exit-code\n          0\n        output_file: /tmp/report.json\nname: Secret Detection Workflow\ntrigger:\n  true:\n  - item_activated\n  - resource_added\n  - pull_request_created\n  - pull_request_updated\n  - merge_default_branch\n  depends_on:\n  - workflow-enrichment-code\n",
                        "depends_on": [
                            "workflow-enrichment-code"
                        ],
                        "parsed_content": {
                            "name": "Secret Detection Workflow",
                            "jobs": {
                                "secret-detection": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "mime_types": [
                                            "text"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run Gitleaks",
                                            "with": {
                                                "args": "detect --config \\$GITLEAKS_CONFIG_FILE_PATH --source \\${WORK_DIR:-.} -v --report-format json --report-path \\$REPORT_FILE --redact --no-git --exit-code 0",
                                                "output_file": "/tmp/report.json"
                                            },
                                            "uses": "ghcr.io/jitsecurity-controls/control-gitleaks-alpine:main",
                                            "tags": {
                                                "security_tool": "Gitleaks",
                                                "links": {
                                                    "security_tool": "https://github.com/zricethezav/gitleaks",
                                                    "github": "https://github.com/jitsecurity-controls/jit-secrets-detection-control"
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            "trigger": {
                                "true": [
                                    "item_activated",
                                    "resource_added",
                                    "pull_request_created",
                                    "pull_request_updated",
                                    "merge_default_branch"
                                ],
                                "depends_on": [
                                    "workflow-enrichment-code"
                                ]
                            }
                        },
                        "params": null,
                        "plan_item_template_slug": null,
                        "asset_types": [
                            "repo"
                        ]
                    },
                    "raw_job_template": {
                        "asset_type": "repo",
                        "default": true,
                        "runner": "github_actions",
                        "if": {
                            "mime_types": [
                                "text"
                            ]
                        },
                        "steps": [
                            {
                                "name": "Run Gitleaks",
                                "with": {
                                    "args": "detect --config \\$GITLEAKS_CONFIG_FILE_PATH --source \\${WORK_DIR:-.} -v --report-format json --report-path \\$REPORT_FILE --redact --no-git --exit-code 0",
                                    "output_file": "/tmp/report.json"
                                },
                                "uses": "ghcr.io/jitsecurity-controls/control-gitleaks-alpine:main",
                                "tags": {
                                    "security_tool": "Gitleaks",
                                    "links": {
                                        "security_tool": "https://github.com/zricethezav/gitleaks",
                                        "github": "https://github.com/jitsecurity-controls/jit-secrets-detection-control"
                                    }
                                }
                            }
                        ]
                    },
                    "depends_on_slugs": [
                        "workflow-enrichment-code"
                    ]
                },
                {
                    "plan_item_slug": "item-secret-detection",
                    "workflow_slug": "workflow-secret-detection2",
                    "workflow_name": "Secret Detection 2 Workflow",
                    "job_name": "secret-detection2",
                    "workflow_template": {
                        "slug": "workflow-secret-detection2",
                        "name": "Secret Detection 2 Workflow",
                        "type": "workflow",
                        "default": null,
                        "content": "jobs:\n  secret-detection2:\n    asset_type: repo\n    default: true\n    if:\n      mime_types:\n      - text\n    runner: github_actions\n    steps:\n    - default: true\n      name: Run Detect Secrets\n      tags:\n        links:\n          github: https://github.com/jitsecurity-controls/jit-detect-secrets-control\n          security_tool: https://github.com/Yelp/detect-secrets\n        security_tool: Detect Secrets\n      uses: ghcr.io/jitsecurity-controls/control-detect-secrets-slim:main\n      with:\n        args: scan \\${WORK_DIR:-.}\n        output_file: /tmp/report.json\nname: Secret Detection 2 Workflow\ntrigger:\n  true:\n  - item_activated\n  - resource_added\n  - pull_request_created\n  - pull_request_updated\n  - merge_default_branch\n  depends_on:\n  - workflow-enrichment-code\n",
                        "depends_on": [
                            "workflow-enrichment-code"
                        ],
                        "parsed_content": {
                            "name": "Secret Detection 2 Workflow",
                            "jobs": {
                                "secret-detection2": {
                                    "asset_type": "repo",
                                    "default": true,
                                    "runner": "github_actions",
                                    "if": {
                                        "mime_types": [
                                            "text"
                                        ]
                                    },
                                    "steps": [
                                        {
                                            "name": "Run Detect Secrets",
                                            "with": {
                                                "args": "scan \\${WORK_DIR:-.}",
                                                "output_file": "/tmp/report.json"
                                            },
                                            "default": true,
                                            "uses": "ghcr.io/jitsecurity-controls/control-detect-secrets-slim:main",
                                            "tags": {
                                                "security_tool": "Detect Secrets",
                                                "links": {
                                                    "security_tool": "https://github.com/Yelp/detect-secrets",
                                                    "github": "https://github.com/jitsecurity-controls/jit-detect-secrets-control"
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            "trigger": {
                                "true": [
                                    "item_activated",
                                    "resource_added",
                                    "pull_request_created",
                                    "pull_request_updated",
                                    "merge_default_branch"
                                ],
                                "depends_on": [
                                    "workflow-enrichment-code"
                                ]
                            }
                        },
                        "params": null,
                        "plan_item_template_slug": null,
                        "asset_types": [
                            "repo"
                        ]
                    },
                    "raw_job_template": {
                        "asset_type": "repo",
                        "default": true,
                        "runner": "github_actions",
                        "if": {
                            "mime_types": [
                                "text"
                            ]
                        },
                        "steps": [
                            {
                                "name": "Run Detect Secrets",
                                "with": {
                                    "args": "scan \\${WORK_DIR:-.}",
                                    "output_file": "/tmp/report.json"
                                },
                                "default": true,
                                "uses": "ghcr.io/jitsecurity-controls/control-detect-secrets-slim:main",
                                "tags": {
                                    "security_tool": "Detect Secrets",
                                    "links": {
                                        "security_tool": "https://github.com/Yelp/detect-secrets",
                                        "github": "https://github.com/jitsecurity-controls/jit-detect-secrets-control"
                                    }
                                }
                            }
                        ]
                    },
                    "depends_on_slugs": [
                        "workflow-enrichment-code"
                    ]
                }
            ],
            "should_enrich": true,
            "depends_on_workflows_templates": [
                {
                    "slug": "workflow-enrichment-code",
                    "name": "Code Enrichment Workflow",
                    "depends_on": [],
                    "parsed_content": {
                        "name": "Code Enrichment Workflow",
                        "jobs": {
                            "enrich": {
                                "asset_type": "repo",
                                "default": true,
                                "runner": "github_actions",
                                "steps": [
                                    {
                                        "name": "Run code enrichment",
                                        "with": {
                                            "args": "--path \\${WORK_DIR:-.}"
                                        },
                                        "uses": "ghcr.io/jitsecurity-controls/control-enrichment-slim:main"
                                    }
                                ]
                            }
                        }
                    },
                    "params": null,
                    "plan_item_template_slug": null,
                    "asset_types": [
                        "repo"
                    ]
                }
            ],
            "enriched_data": {}
        },
        "trigger_enrich_execution": {
            "jit_event": {
                "tenant_id": "46db21b6-fb2a-4c5d-9148-37d2248a7c20",
                "jit_event_name": "resource_added",
                "jit_event_id": "8b2246b2-19ba-4645-aed3-92fdf88483a2",
                "asset_id": "57b6f168-8f2a-4b99-848f-f9c439ddac44",
                "workflows": null,
                "centralized_repo_asset_id": "1a19b50a-20ef-4e33-afa1-8d9ac96ca36e",
                "centralized_repo_asset_name": ".jit",
                "centralized_repo_files_location": "",
                "ci_workflow_files_path": [
                    ".github/workflows/security.yml"
                ],
                "app_id": "161076",
                "installation_id": "33985869",
                "original_repository": "moshiko",
                "vendor": "github",
                "owner": "shlomi-test-org",
                "branch": null,
                "pull_request_number": null,
                "pull_request_title": null,
                "commits": {
                    "base_sha": null,
                    "head_sha": ""
                },
                "user_vendor_id": null,
                "user_vendor_name": null,
                "languages": [
                    "python",
                    "docker",
                    "js_deps",
                    "JS",
                    "TS",
                    "go",
                    "go_deps",
                    "terraform",
                    "java",
                    "bash",
                    "serverless",
                    "php_deps"
                ],
                "event_signature": "github-shlomi-test-org-57b6f168-8f2a-4b99-848f-f9c439ddac44--null"
            },
            "job_name": "enrich",
            "steps": [
                {
                    "name": "Run code enrichment",
                    "uses": "ghcr.io/jitsecurity-controls/control-enrichment-slim:main",
                    "params": {
                        "args": "--path \\${WORK_DIR:-.}"
                    }
                }
            ],
            "context": {
                "jit_event": {
                    "tenant_id": "46db21b6-fb2a-4c5d-9148-37d2248a7c20",
                    "jit_event_name": "resource_added",
                    "jit_event_id": "8b2246b2-19ba-4645-aed3-92fdf88483a2",
                    "asset_id": null,
                    "workflows": null,
                    "created_asset_ids": [
                        "57b6f168-8f2a-4b99-848f-f9c439ddac44"
                    ]
                },
                "asset": {
                    "aws_account_id": null,
                    "aws_stack_arn": null,
                    "aws_jit_role_name": null,
                    "aws_regions_to_scan": null,
                    "aws_jit_role_external_id": null,
                    "target_url": null,
                    "exclude_paths": null,
                    "authentication_mode": null,
                    "auth_header_name": null,
                    "auth_header_value": null,
                    "login_page_url": null,
                    "username": null,
                    "username_css_selector": null,
                    "password": null,
                    "password_css_selector": null,
                    "api_domain": null,
                    "external_id": "614020004",
                    "asset_id": "57b6f168-8f2a-4b99-848f-f9c439ddac44",
                    "tenant_id": "46db21b6-fb2a-4c5d-9148-37d2248a7c20",
                    "asset_type": "repo",
                    "vendor": "github",
                    "owner": "shlomi-test-org",
                    "asset_name": "moshiko",
                    "risk_status": null,
                    "risk_score": 0,
                    "is_active": true,
                    "is_covered": true,
                    "created_at": "2023-03-14T18:23:53.924735",
                    "modified_at": "2023-03-14T18:23:53.924735",
                    "environment": null,
                    "is_branch_protected_by_jit": false,
                    "status": null,
                    "status_details": null
                },
                "installation": {
                    "tenant_id": "46db21b6-fb2a-4c5d-9148-37d2248a7c20",
                    "app_id": "161076",
                    "owner": "shlomi-test-org",
                    "installation_id": "33985869",
                    "is_active": true,
                    "creator": "shlomi-test-org",
                    "vendor": "github",
                    "name": "shlomi-test-org",
                    "created_at": "2023-02-08T12:34:37.864980",
                    "modified_at": "2023-02-08T12:34:37.864980",
                    "status": "connected",
                    "status_details": null,
                    "installation_type": null,
                    "vendor_response": {
                        "canPreviewItem": true,
                        "repository_selection": "selected"
                    },
                    "external_id": null,
                    "aws_regions_to_monitor": null,
                    "centralized_repo_asset_id": "1a19b50a-20ef-4e33-afa1-8d9ac96ca36e",
                    "centralized_repo_asset": {
                        "aws_account_id": null,
                        "aws_stack_arn": null,
                        "aws_jit_role_name": null,
                        "aws_regions_to_scan": null,
                        "target_url": null,
                        "exclude_paths": null,
                        "authentication_mode": null,
                        "auth_header_name": null,
                        "auth_header_value": null,
                        "login_page_url": null,
                        "username": null,
                        "username_css_selector": null,
                        "password": null,
                        "password_css_selector": null,
                        "api_domain": null,
                        "external_id": "568439579",
                        "asset_id": "1a19b50a-20ef-4e33-afa1-8d9ac96ca36e",
                        "tenant_id": "46db21b6-fb2a-4c5d-9148-37d2248a7c20",
                        "asset_type": "repo",
                        "vendor": "github",
                        "owner": "shlomi-test-org",
                        "asset_name": ".jit",
                        "risk_status": null,
                        "risk_score": 0,
                        "is_active": true,
                        "is_covered": true,
                        "created_at": "2022-11-20T14:41:49.229143",
                        "modified_at": "2023-02-08T12:34:42.325014",
                        "environment": null,
                        "is_branch_protected_by_jit": false,
                        "status": null,
                        "status_details": null
                    }
                },
                "secrets": {},
                "config": {},
                "job": {
                    "runner": {
                        "type": "github_actions",
                        "setup": null
                    },
                    "job_name": "enrich",
                    "condition": null,
                    "steps": [
                        {
                            "name": "Run code enrichment",
                            "uses": "ghcr.io/jitsecurity-controls/control-enrichment-slim:main",
                            "params": {
                                "args": "--path \\${WORK_DIR:-.}"
                            }
                        }
                    ]
                },
                "centralized": {
                    "centralized_repo_files_location": "",
                    "ci_workflow_files_path": [
                        ".github/workflows/security.yml"
                    ]
                }
            },
            "plan_slug": "jit-plan",
            "plan_item_slug": "DEPENDS_ON_PLAN_ITEM_SLUG",
            "workflow_slug": "workflow-enrichment-code",
            "created_at": "2023-03-14T18:24:13.256843",
            "job_runner": "github_actions",
            "inputs": {},
            "source_asset_id": null
        },
        "enriched_data": {
            "languages": [],
            "frameworks": [],
            "package_managers": [],
            "mime_types": [
                "text"
            ],
            "Epsagon": {
                "id": "c47ae195-0e32-44ee-9c44-9ec0ff9f0761",
                "step_num": -1
            }
        }
    }
}
