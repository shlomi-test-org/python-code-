name: Build & Test & Deploy Prowler Security Control

on:
  push:
  workflow_dispatch:

jobs:
  test-control-on-aws:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2
      - name: build Jit control
        id: build-control
        run: |
          IMAGE_TAG=prowler-test
          # docker login ghcr
          docker login ghcr.io --username ${{ secrets.ghcr_registry_user }} --password ${{ secrets.ghcr_registry_token }}

          # build the image
          docker build -t $IMAGE_TAG -f "./docker/Dockerfile" .
          echo "::set-output name=image_tag::$IMAGE_TAG"

      - name: Deploy Action checkout
        uses: daspn/private-actions-checkout@v2
        with:
          actions_list: '["jitsecurity-controls/test-aws-control-action@main"]'
          checkout_base_path: ./.github/actions
          app_id: ${{ secrets.CHECKOUT_APP_ID }}
          app_private_key: ${{ secrets.CHECKOUT_APP_PRIVATE_KEY }}
      - name: 'running test control on aws'
        uses: ./.github/actions/test-aws-control-action
        with:
          image_tag: ${{ steps.build-control.outputs.image_tag }}
          test_path: 'tests/integration'
          command_arguments: "-q -b -c extra73 -M json -o . -F output"



  build-deploy-control-ecr:
    strategy:
        matrix:
          environment: [dev, staging, prod]
    # environment: ${{ matrix.environment }} # commented until we have environments in jitsecurity-controls
    runs-on: ubuntu-latest
    needs: [test-control-on-aws]
    if: github.ref == 'refs/heads/main'

    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2
      - name: build Jit control
        id: build-control
        run: |
          IMAGE_TAG=prowler-temp-tag
          # docker login ghcr
          docker login ghcr.io --username ${{ secrets.ghcr_registry_user }} --password ${{ secrets.ghcr_registry_token }}

          # build the image
          docker build -t $IMAGE_TAG -f "./docker/Dockerfile" .
          echo "::set-output name=image_tag::$IMAGE_TAG"

      - name: Deploy Action checkout
        uses: daspn/private-actions-checkout@v2
        with:
          actions_list: '["jitsecurity-controls/ecr-action@main"]'
          checkout_base_path: ./.github/actions
          app_id: ${{ secrets.CHECKOUT_APP_ID }}
          app_private_key: ${{ secrets.CHECKOUT_APP_PRIVATE_KEY }}

      - name: 'running ecr push'
        uses: ./.github/actions/ecr-action
        with:
          stage: ${{ matrix.environment }}
          current_image_tag: ${{ steps.build-control.outputs.image_tag }}
          destination_image_tag: '${{ github.sha }}'
          ecr_repository: 'prowler'
